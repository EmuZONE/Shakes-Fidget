<?php

//base entity with nothing more than base stats
//base for simulator
class Entity{

	//DB player ID, monster ID, and what not to display in fight correctly
	public $ID;

	//used for simulator
	public $hp;

	public $maxHp;

	public $class;
	public $lvl;

	protected $baseStats = [
	"str" => "0",
	"dex" => "0",
	"int" => "0",
	"wit" => "0",
	"luck" => "0"];

	//dmg range
	public $dmg_min;
	public $dmg_max;

	//block/dodge chance, range 1-100, 0 = no dodge/block
	public $block;

	//crit chance, float? tbd
	public $crit;

	//items shown in fights
	public $weapon;
	public $shield;

	//sets hp based on lvl, stats etc
	public function Entity(){

		if($this->class == 1)
			$this->maxHp = $this->getTotalStats()['wit'] * 5 * ($this->lvl + 1);
		else if($this->class == 2)
			$this->maxHp = $this->getTotalStats()['wit'] * 2 * ($this->lvl + 1);
		else  
			$this->maxHp = $this->getTotalStats()['wit'] * 4 * ($this->lvl + 1);

		$this->hp = $this->maxHp;

		//TODO: delete this later
		$this->crit = 50;
	}

	//used for simulation
	public function dmg($dmg){
		$this->hp -= $dmg;
	}

	//in case i need to reset for simulations
	public function resetHp(){
		$this->hp = $this->maxHp;
	}

	//override in subclasses, to add equipstats
	public function getTotalStats(){
		return $this->baseStats;
	}

	//TODO check if this is needed for other stuff
	public function getFightHeader(){

	}

	public static function getStatName($index){
		switch($index){
			case 1:
				return "str";
				break;
			case 2:
				return "dex";
				break;
			case 3:
				return "int";
				break;
			case 4:
				return "wit";
				break;
			case 5:
				return "luck";
				break;
		}
	}
}

//dungeon monsters, maybe quest monsters?
class Monster extends Entity{

	// moved to dungeonenter in req.php
	// public static $faces = [
	// [129, 129, 112, 6, 84, 31, 74, 116, 114, 4],
	// [131, 131, 38, 112, 86, 51, 102, 23, 67, 92],
	// [28, 28, 3, 57, 94, 140, 78, 93, 162, 142],
	// [124, 124, 45, 94, 107, 46, 39, 141, 47, 137],
	// [9, 9, 150, 36, 153, 17, 151, 161, 118, 160],
	// [128, 128, 86, 77, 81, 89, 16, 88, 30, 87],
	// [66, 66, 97, 82, 52, 158, 135, 102, 52, 149],
	// [38, 38, 143, 147, 144, 99, 154, 146, 98, 156],
	// [136, 136, 125, 99, 37, 129, 138, 90, 42, 74],
	// [101, 101, 115, 159, 21, 61, 163, 161, 159, 158],
	// [173, 173, 174, 175, 176, 177, 178, 179, 180, 181],
	// [183, 183, 184, 185, 186, 187, 188, 189, 190, 191],
	// [243, 243, 244, 245, 246, 247, 248, 249, 250, 251],
	// [600, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619]];

	public $exp;
	public $gold;
	public $weaponID;


	public function Monster($lvl, $class, $str, $agi, $int, $wit, $luck, $dmg_min, $dmg_max, $hp, $armor, $id, $exp, $weapon_id, $shield_id = 5){
		$this->lvl = $lvl;
		$this->class = $class;
		$this->baseStats['str'] = $str;
		$this->baseStats['dex'] = $agi;
		$this->baseStats['int'] = $int;
		$this->baseStats['wit'] = $wit;
		$this->baseStats['luck'] = $luck;

		$this->hp = $hp;
		$this->maxHp = $hp;

		$this->dmg_min = $dmg_min;
		$this->dmg_max = $dmg_max;

		// $this->armor = $armor;

		$this->ID = $id;
		if($id>0)
			$this->ID *= -1;

		$this->exp = $exp;

		$this->weaponID = $weapon_id;

		if($this->class == 1){
			if($shield_id > 0){
				$this->block = 25;
				$this->shield = $shield_id;
			}
		}else if($this->class == 3){
			$this->block = 50;
			// $mainStat = "dex";
		}else{
			$this->block = 0;
			// $mainStat = "int";
		}

		//temporary
		$this->crit = 25;

	}

	//temp shit, buffs the mob to dark zone status
	public function buff(){
		$this->maxHp += 10000000;
		$this->hp = $this->maxHp;

		$this->dmg_min += 1000000;
		$this->dmg_max += 1500000;

		$this->baseStats['str'] += 5000;
		$this->baseStats['dex'] += 5000;
		$this->baseStats['int'] += 5000;
		$this->baseStats['wit'] += 5000;
		$this->baseStats['luck'] += 5000;

		$this->lvl += 100;

	}

	public function getFightHeader(){

		$ret = [];
		for($i = 0; $i < 47; $i++)
			$ret[] = 0;

		$ret[47] = "";

		$ret[0] = $this->ID;
		$ret[1] = 0;
		$ret[2] = $this->lvl;
		$ret[3] = $this->maxHp;
		$ret[4] = $this->hp;
		$ret[5] = $this->baseStats['str'];
		$ret[6] = $this->baseStats['dex'];
		$ret[7] = $this->baseStats['int'];
		$ret[8] = $this->baseStats['wit'];
		$ret[9] = $this->baseStats['luck'];
		$ret[10] = abs($this->ID) * -1;
		$ret[11] = 0;
		$ret[12] = 0;
		$ret[13] = 0;
		$ret[14] = 0;
		$ret[15] = 0;
		$ret[16] = 0;
		$ret[17] = 0;
		$ret[18] = 0;
		$ret[19] = 0;
		$ret[20] = 0;
		$ret[21] = 0;

		//weapon type
		$ret[22] = 1;

		//weapon id, if weapon is an item, 23 = 1 and 24 = item_id, else 23 is hittype
		if($this->weaponID > 0){
			$ret[23] = 1;
			$ret[24] = $this->weaponID;
		}else{
			$ret[23] = $this->weaponID;
		}


		$ret[25] = 0;
		$ret[26] = 0;
		$ret[27] = 0;
		$ret[28] = 0;
		$ret[29] = 0;
		$ret[30] = 0;
		$ret[31] = 0;
		$ret[32] = 0;
		$ret[33] = 0;
		$ret[34] = 0;
		$ret[35] = 2;
		$ret[36] = 5;
		$ret[37] = 0;
		$ret[38] = 0;
		$ret[39] = 0;
		$ret[40] = 0;
		$ret[41] = 0;
		$ret[42] = 0;
		$ret[43] = 0;
		$ret[44] = 0;
		$ret[45] = 0;
		$ret[46] = 0;

		//pierwsza wartosc nie moze byc 0, bo postac jest po zlej stronie ekranu
		// return "-1/0/390/23968300/23968300/12540/4395/4370/12260/2710/-250/0/0/0/0/0/0/0/0/0/0/0/1/1/56/0/0/0/0/0/0/0/0/0/0/2/5/0/0/0/0/0/0/0/0/0/0";
		// return "-1/0/132/1463000/1463000/2480/850/825/2200/650/-38/0/0/0/0/0/0/0/0/0/0/0/1/65531/0/0/0/0/0/0/0/0/0/0/0/2/5/0/0/0/0/0/0/0/0/0/0";

		return join("/", $ret);
	}


	public static function getDungMonster($dung, $stage){
		switch ($dung) {
			case 1:
				switch ($stage) {
					case 1:
						return new Monster(10, 2, 48, 52, 104, 77, 470, 342, 513, 1694, 85, 129, 1287, -2);
					case 2:
						return new Monster(12, 1, 120, 6, 59, 101, 51, 208, 312, 6565, 510, 112, 1785, -1);
					case 3:
						return new Monster(14, 1, 149, 78, 69, 124, 65, 302, 445, 9300, 595, 6, 2395, -1);
					case 4:
						return new Monster(16, 3, 84, 195, 83, 131, 94, 554, 820, 8908, 340, 84, 3146, -1);
					case 5:
						return new Monster(18, 1, 97, 99, 303, 198, 137, 2097, 3130, 9108, 187, 31, 4050, -1);
					case 6:
						return new Monster(22, 2, 97, 99, 303, 198, 137, 2097, 3130, 9108, 187, 74, 6412, -2);
					case 7:
						return new Monster(26, 1, 359, 135, 122, 260, 142, 1292, 1956, 35100, 1105, 116, 9631, 24);
					case 8:
						return new Monster(30, 2, 126, 130, 460, 279, 193, 4277, 6439, 17298, 255, 114, 13952, 1004);
					case 9:
						return new Monster(40, 1, 614, 207, 191, 445, 238, 3370, 5054, 91225, 1700, 4, 30909, -1);
					case 10:
						return new Monster(50, 3, 221, 847, 213, 561, 292, 7284, 10884, 114444, 1065, 166, 60343, -1);
				}
			case 2:
				switch ($stage) {
					case 1:
						return new Monster(20, 3, 101, 264, 101, 174, 119, 932, 1397, 14616, 425, 131, 2124, -1);
					case 2:
						return new Monster(24, 1, 317, 126, 117, 238, 130, 1046, 1570, 29750, 1020, 38, 7909, -5);
					case 3:
						return new Monster(28, 1, 393, 138, 125, 284, 152, 1531, 2297, 41180, 1190, 112, 11652, -1);
					case 4:
						return new Monster(34, 3, 143, 554, 144, 303, 216, 3215, 4850, 42420, 722, 86, 19539, -1);
					case 5:
						return new Monster(38, 1, 592, 178, 162, 398, 195, 3070, 4635, 77610, 1615, 51, 26652, -1);
					case 6:
						return new Monster(44, 2, 191, 190, 780, 411, 259, 10586, 15879, 36990, 374, 102, 40886, -2);
					case 7:
						return new Monster(48, 1, 744, 243, 230, 563, 246, 4901, 7314, 137935, 2040, 23, 53228, -4);
					case 8:
						return new Monster(56, 3, 250, 960, 240, 680, 345, 9215, 13774, 155040, 1190, 67, 86309, 9);
					case 9:
						return new Monster(66, 3, 300, 1160, 290, 880, 420, 13104, 19656, 233840, 1420, 92, 148282, 8);
					case 10:
						return new Monster(70, 1, 1240, 385, 360, 960, 340, 11875, 17750, 340800, 2975, 169, 181085, -2);
				}
			case 3:
				switch ($stage) {
					case 1:
						return new Monster(32, 3, 155, 486, 161, 276, 205, 2678, 4018, 36432, 680, 28, 16557, -1);
					case 2:
						return new Monster(36, 3, 141, 602, 149, 344, 230, 3733, 5569, 50912, 765, 3, 22893, -1);
					case 3:
						return new Monster(42, 3, 205, 726, 224, 403, 247, 5226, 7875, 69316, 892, 57, 35642, -1);
					case 4:
						return new Monster(54, 1, 920, 265, 240, 640, 260, 6789, 10230, 176000, 2295, 94, 46757, 9);
					case 5:
						return new Monster(46, 1, 768, 215, 183, 539, 249, 4824, 7235, 126665, 1955, 140, 76872, 7);
					case 6:
						return new Monster(60, 3, 270, 1040, 260, 760, 375, 10710, 16065, 185440, 1275, 78, 108013, -1);
					case 7:
						return new Monster(64, 1, 1120, 340, 315, 840, 310, 9831, 14690, 273000, 2720, 93, 133734, 9);
					case 8:
						return new Monster(76, 3, 350, 1360, 340, 1080, 495, 17673, 26441, 332640, 1615, 162, 240784, -1);
					case 9:
						return new Monster(86, 1, 1560, 505, 480, 1280, 420, 18212, 27475, 556800, 3655, 142, 374041, 7);
					case 10:
						return new Monster(90, 1, 1640, 535, 510, 1360, 440, 20130, 30195, 618800, 3825, 170, 441608, 50);
				}
			case 4:
				switch ($stage) {
					case 1:
						return new Monster(52, 3, 230, 880, 220, 601, 315, 7832, 11748, 127412, 1105, 124, 68234, -2);
					case 2:
						return new Monster(58, 3, 260, 1000, 250, 720, 360, 9898, 14847, 169920, 1232, 45, 96706, 7);
					case 3:
						return new Monster(62, 1, 1080, 325, 300, 800, 300, 9156, 13734, 252000, 2635, 94, 120287, 9);
					case 4:
						return new Monster(68, 1, 1200, 370, 345, 920, 330, 11132, 16698, 317400, 2890, 107, 163994, -1);
					case 5:
						return new Monster(74, 1, 1320, 415, 390, 1040, 360, 13300, 19950, 390000, 3145, 46, 163994, 21);
					case 6:
						return new Monster(82, 3, 380, 1480, 370, 1200, 540, 20711, 31141, 398400, 1742, 39, 315135, 9);
					case 7:
						return new Monster(84, 1, 1520, 490, 465, 1240, 410, 17442, 26163, 527000, 3570, 141, 343618, 7);
					case 8:
						return new Monster(102, 3, 480, 1880, 470, 1600, 690, 32697, 49140, 659200, 2167, 47, 560797, 21);
					case 9:
						return new Monster(96, 1, 1760, 580, 555, 1480, 470, 23010, 34515, 717800, 4080, 137, 704509, -1);
					case 10:
						return new Monster(110, 3, 520, 2040, 510, 1760, 750, 38335, 57400, 781440, 2337, 172, 940791, 24);
				}
			case 5:
				switch ($stage) {
					case 1:
						return new Monster(72, 3, 330, 1280, 320, 1000, 465, 15738, 23607, 292000, 1530, 9, 199497, -1);
					case 2:
						return new Monster(78, 3, 360, 1400, 350, 1120, 510, 18612, 27918, 353920, 1657, 150, 263817, 27);
					case 3:
						return new Monster(80, 3, 370, 1440, 360, 1160, 525, 19720, 29580, 375840, 1700, 36, 288496, -1);
					case 4:
						return new Monster(88, 3, 410, 1600, 400, 1320, 585, 23989, 36064, 469920, 1870, 153, 406744, 27);
					case 5:
						return new Monster(94, 1, 1720, 565, 540, 1440, 460, 21971, 33043, 684000, 3995, 17, 518518, -1);
					case 6:
						return new Monster(100, 3, 470, 1840, 460, 1560, 675, 31450, 47175, 630240, 2125, 151, 653687, 27);
					case 7:
						return new Monster(108, 1, 2000, 670, 645, 1720, 530, 29346, 44220, 937400, 4590, 161, 876584, -1);
					case 8:
						return new Monster(114, 2, 520, 540, 2200, 1760, 775, 76908, 115583, 404800, 969, 118, 1081088, -1);
					case 9:
						return new Monster(122, 1, 2280, 775, 750, 2000, 600, 37785, 56792, 1230000, 5185, 160, 1412064, -1);
					case 10:
						return new Monster(130, 3, 620, 2440, 610, 2160, 900, 54145, 81095, 1131840, 2762, 171, 1821461, 20);
				}
			case 6:
				switch ($stage) {
					case 1:
						return new Monster(92, 1, 1680, 550, 525, 1400, 450, 21125, 31603, 651000, 3910, 128, 478738, -1);
					case 2:
						return new Monster(98, 3, 460, 1800, 450, 1520, 660, 30046, 45069, 601920, 2082, 86, 605700, -1);
					case 3:
						return new Monster(104, 2, 470, 490, 2000, 1560, 700, 63918, 95877, 327600, 884, 77, 758451, -1);
					case 4:
						return new Monster(106, 3, 500, 1960, 490, 1680, 720, 35460, 53190, 719040, 2252, 81, 815853, -3);
					case 5:
						return new Monster(118, 3, 560, 2200, 520, 1920, 810, 44200, 66300, 913920, 2507, 89, 1237696, -1);
					case 6:
						return new Monster(124, 1, 2320, 790, 765, 2040, 610, 39144, 58716, 1275000, 5270, 16, 1506706, -1);
					case 7:
						return new Monster(128, 3, 610, 2400, 600, 2120, 885, 52297, 78566, 1093920, 2720, 88, 1710914, -1);
					case 8:
						return new Monster(136, 2, 630, 650, 2640, 2200, 940, 110240, 165360, 602800, 1156, 30, 2187846, -1);
					case 9:
						return new Monster(144, 3, 690, 2720, 680, 2440, 1005, 66612, 100191, 1415200, 3060, 87, 2767832, -1);
					case 10:
						return new Monster(150, 3, 720, 2840, 710, 2560, 1050, 72675, 108870, 1546240, 3187, 167, 3280697, -1);
				}
			case 7:
				switch ($stage) {
					case 1:
						return new Monster(112, 3, 530, 2080, 520, 1800, 765, 39710, 59565, 813600, 2380, 66, 1009041, -1);
					case 2:
						return new Monster(116, 3, 550, 2160, 540, 1880, 795, 42749, 64015, 879840, 2465, 97, 1157092, -1);
					case 3:
						return new Monster(120, 2, 550, 570, 2320, 1880, 820, 85511, 128150, 454960, 1020, 82, 1322625, -3);
					case 4:
						return new Monster(126, 1, 2360, 805, 780, 2080, 620, 40527, 60909, 1320800, 5355, 52, 1606255, -6);
					case 5:
						return new Monster(138, 1, 2600, 895, 870, 2320, 680, 48807, 73341, 1612400, 5865, 158, 2059369, -1);
					case 6:
						return new Monster(134, 1, 2520, 865, 840, 2240, 660, 46046, 69069, 1512000, 5695, 135, 2322552, -1);
					case 7:
						return new Monster(142, 2, 660, 680, 2760, 2320, 985, 120218, 180327, 663520, 1207, 102, 2612278, -2);
					case 8:
						return new Monster(146, 1, 2760, 955, 930, 2480, 720, 54846, 82269, 1822800, 6205, 52, 2930646, -6);
					case 9:
						return new Monster(148, 1, 2800, 970, 945, 2520, 730, 56481, 84581, 1877400, 6290, 149, 3101774, -1);
					case 10:
						return new Monster(170, 1, 3240, 1135, 1110, 2960, 840, 75075, 112450, 2530800, 7225, 168, 5583708, -6);
				}
			case 8:
				switch ($stage) {
					case 1:
						return new Monster(132, 1, 2480, 850, 825, 2200, 650, 44571, 66981, 1463000, 5610, 38, 1937541, -5);
					case 2:
						return new Monster(140, 3, 670, 2640, 660, 2360, 975, 63070, 94605, 1331040, 2975, 143, 2463717, -2);
					case 3:
						return new Monster(154, 1, 2920, 1015, 990, 2640, 760, 61237, 92002, 2046000, 6545, 147, 3663979, -1);
					case 4:
						return new Monster(158, 3, 760, 3000, 750, 2720, 1110, 80668, 121002, 1729920, 3357, 144, 4082943, -2);
					case 5:
						return new Monster(164, 3, 790, 3120, 780, 2840, 1155, 87014, 130834, 1874400, 3485, 99, 4785109, -1);
					case 6:
						return new Monster(168, 2, 790, 810, 3280, 2840, 1180, 169106, 253659, 959920, 1428, 154, 5306545, -3);
					case 7:
						return new Monster(172, 1, 3280, 1150, 1125, 3000, 850, 76657, 115150, 2595000, 7310, 146, 5873522, -1);
					case 8:
						return new Monster(180, 3, 870, 3340, 860, 3160, 1275, 102510, 153765, 2287840, 3825, 98, 7157815, -1);
					case 9:
						return new Monster(185, 2, 875, 895, 3620, 3180, 1305, 205458, 308187, 1182960, 1572, 156, 8070081, -3);
					case 10:
						return new Monster(200, 2, 950, 970, 3920, 3480, 1410, 240516, 360774, 1398960, 1700, 164, 11412835, 2051);
				}
			case 9:
				switch ($stage) {
					case 1:
						return new Monster(152, 1, 2880, 1000, 975, 2600, 750, 59534, 89590, 1989000, 6460, 136, 3467701, -1);
					case 2:
						return new Monster(156, 2, 730, 750, 3040, 2600, 1090, 145485, 218380, 816400, 1326, 125, 3868959, -2);
					case 3:
						return new Monster(160, 3, 770, 3040, 760, 2760, 1125, 82960, 124440, 1777440, 3400, 99, 4307201, -1);
					case 4:
						return new Monster(162, 1, 3080, 1075, 1050, 2800, 800, 67980, 101970, 2282000, 6885, 37, 4541147, -5);
					case 5:
						return new Monster(166, 2, 780, 800, 3240, 2800, 1165, 164775, 247325, 935200, 1411, 129, 5040468, -2);
					case 6:
						return new Monster(174, 1, 3320, 1165, 1140, 3040, 860, 78588, 117882, 2660000, 7395, 138, 6175189, 2004);
					case 7:
						return new Monster(176, 3, 850, 3360, 840, 3080, 1245, 100763, 150976, 2180640, 3740, 90, 6489101, 8);
					case 8:
						return new Monster(178, 3, 860, 3400, 850, 3120, 1260, 102982, 154473, 2233920, 3782, 42, 6816906, 9);
					case 9:
						return new Monster(190, 2, 900, 920, 3720, 3280, 1340, 216713, 325256, 1252960, 1615, 74, 9081081, -2);
				}
			case 10:
				switch ($stage) {
					case 1:
						return new Monster(205, 3, 995, 3940, 985, 3660, 1450, 137460, 206190, 3015840, 4356, 101, 12751538, 24);
					case 2:
						return new Monster(210, 1, 4040, 1420, 1395, 3760, 1010, 115425, 173340, 3966800, 8925, 115, 14222021, 24);
					case 3:
						return new Monster(215, 1, 4140, 1455, 1430, 3860, 1030, 121180, 181770, 4168800, 9137, 159, 15824529, 13);
					case 4:
						return new Monster(220, 1, 4240, 1490, 1465, 3960, 1050, 127075, 190400, 4375800, 9350, 21, 17581974, -4);
					case 5:
						return new Monster(225, 3, 1095, 4340, 1085, 4060, 1590, 166170, 249255, 3670240, 4781, 61, 19491852, -1);
					case 6:
						return new Monster(230, 3, 1120, 4440, 1110, 4160, 1615, 173995, 260770, 3843840, 4887, 163, 21576743, -1);
					case 7:
						return new Monster(235, 2, 1125, 1145, 4620, 4180, 1655, 332897, 499114, 1972960, 1997, 161, 23839326, -1);
					case 8:
						return new Monster(240, 1, 4640, 1630, 1605, 4360, 1130, 151590, 227385, 5253800, 10200, 159, 26302843, 13);
					case 9:
						return new Monster(245, 1, 4740, 1665, 1640, 4460, 1150, 158175, 237025, 5485800, 10412, 158, 28966329, -1);
					case 10:
						return new Monster(250, 1, 4840, 1700, 1675, 4560, 1170, 164900, 247350, 5722800, 10625, 165, 31862139, 10);
				}
			case 11:
				switch ($stage) {
					case 1:
						return new Monster(255, 1, 4940, 1735, 1710, 4660, 1190, 171270, 257400, 5964800, 10837, 173, 34985806, 20);
					case 2:
						return new Monster(260, 3, 1270, 5040, 1260, 4760, 1835, 223210, 334815, 4969440, 5525, 174, 38369989, 7);
					case 3:
						return new Monster(265, 1, 5140, 1805, 1780, 4860, 1230, 185400, 278100, 6463800, 11262, 175, 42016588, 12);
					case 4:
						return new Monster(270, 1, 5240, 1840, 1815, 4960, 1250, 192675, 288750, 6720800, 11475, 176, 45958126, 6);
					case 5:
						return new Monster(275, 2, 1325, 1345, 5420, 4980, 1935, 456663, 685266, 2748960, 2337, 177, 50191950, -1);
					case 6:
						return new Monster(280, 3, 1370, 5440, 1360, 5160, 1975, 259420, 389130, 5799840, 5950, 178, 54764133, -4);
					case 7:
						return new Monster(285, 1, 5540, 1945, 1920, 5260, 1310, 214785, 322455, 7521800, 12112, 179, 59666036, 20);
					case 8:
						return new Monster(290, 3, 1420, 5640, 1410, 5360, 2045, 278545, 417535, 6239040, 6162, 180, 64942539, 29);
					case 9:
						return new Monster(295, 2, 1425, 1445, 5820, 5380, 2075, 525866, 789382, 3184960, 2507, 181, 70595045, 6);
					case 10:
						return new Monster(300, 1, 5840, 2050, 2025, 5560, 1370, 238680, 358020, 8367800, 12750, 182, 76669139, -1);
				}
			case 12:
				switch ($stage) {
					case 1:
						return new Monster(305, 2, 1475, 1495, 6020, 5580, 2145, 562599, 843597, 3414960, 2592, 183, 83158305, -1);
					case 2:
						return new Monster(310, 2, 1500, 1520, 6120, 5680, 2180, 581124, 871686, 3532960, 2635, 184, 90125436, -1);
					case 3:
						return new Monster(315, 1, 6140, 2155, 2130, 5860, 1430, 263220, 394830, 9258800, 13387, 185, 97556858, -1);
					case 4:
						return new Monster(320, 3, 1570, 6240, 1560, 5960, 2255, 340000, 510000, 7652640, 6800, 186, 105514978, -5);
					case 5:
						return new Monster(325, 2, 1575, 1595, 6420, 5980, 2285, 639142, 958713, 3898960, 2762, 187, 113997992, -1);
					case 6:
						return new Monster(330, 1, 6440, 2260, 2235, 6160, 1490, 288960, 434085, 10194800, 14025, 188, 123067419, 30);
					case 7:
						return new Monster(335, 3, 1645, 6540, 1635, 6260, 2360, 372695, 559370, 8413440, 7118, 189, 132712488, -1);
					case 8:
						return new Monster(340, 1, 6640, 2330, 2305, 6360, 1530, 307230, 460845, 10843800, 14450, 190, 143018630, -5);
					case 9:
						return new Monster(345, 1, 6740, 2365, 2340, 6460, 1150, 316575, 474525, 11175800, 14662, 191, 153964246, 53);
					case 10:
						return new Monster(350, 1, 6840, 2400, 2375, 6560, 1570, 326060, 489090, 11512800, 14875, 192, 165631756, 51);
				}
			case 13:
				switch ($stage) {
					case 1:
						return new Monster(355, 1, 7570, 2655, 2630, 7290, 1716, 365356, 548792, 12976200, 15087, 243, 178017293, -1);
					case 2:
						return new Monster(360, 2, 1970, 1990, 8000, 7560, 2838, 881901, 1323252, 5458320, 3060, 244, 191202824, 1003);
					case 3:
						return new Monster(365, 1, 8290, 2908, 2882, 8010, 1860, 411680, 617520, 14658300, 15512, 245, 205171015, -1);
					case 4:
						return new Monster(370, 2, 2160, 2180, 8760, 8320, 3104, 992764, 1489146, 6173440, 3145, 246, 220033230, 1008);
					case 5:
						return new Monster(375, 1, 9340, 3275, 3250, 9060, 2070, 476850, 715275, 17032800, 15937, 247, 235758967, 0);
					case 6:
						return new Monster(380, 3, 2682, 10690, 2672, 10410, 3812, 691220, 1036830, 15864840, 8075, 248, 252458197, 2056);
					case 7:
						return new Monster(385, 2, 2888, 2908, 11670, 11230, 4122, 1375904, 2063856, 8669560, 3272, 249, 270120546, 1056);
					case 8:
						return new Monster(390, 1, 12540, 4395, 4370, 12260, 2710, 665150, 997725, 23968300, 16575, 250, 288853442, 55);
					case 9:
						return new Monster(395, 1, 13540, 4724, 4720, 13260, 2910, 727635, 1090775, 26254800, 16787, 251, 308630400, 11);
					case 10:
						return new Monster(400, 1, 16840, 5900, 5875, 16540, 3570, 916640, 1374960, 33162700, 17000, 252, 329599075, 22);
				}
			case 14:
				switch($stage){
					// ($lvl, $class, $str, $agi, $int, $wit, $luck, $dmg_min, $dmg_max, $hp, $armor, $id, $exp, $weapon_id, $shield_id = 0)
					case 1:
						return new Monster(310, 1, 6400, 2120, 2095, 5760, 1410, 2000000, 2500000, 8956800, 1, 600, 457813975, 0);
					case 2:
						return new Monster(320, 1, 6240, 2190, 2165, 5960, 1450, 2100000, 2600000, 9565800, 1, 601, 535810100, 0);
					case 3:
						return new Monster(330, 2, 3200, 3240, 13040, 12160, 4640, 4000000, 4500000, 8049920, 1, 602, 624697260, 0);
					case 4:
						return new Monster(340, 1, 13280, 4660, 4610, 12720, 3060, 2200000, 2700000, 21687600, 1, 603, 725704305, 0);
					case 5:
						return new Monster(350, 1, 13680, 4800, 4750, 13120, 3140, 2300000, 2800000, 23025600, 1, 604, 856843923, 0);
					case 6:
						return new Monster(360, 2, 5910, 5970, 24000, 22680, 8514, 4100000, 4600000, 16374960, 1, 605, 1079507006, 0);
					case 7:
						return new Monster(370, 3, 6540, 26040, 6510, 25200, 9327, 3000000, 4000000, 37396800, 1, 606, 1315913016, 0);
					case 8:
						return new Monster(380, 1, 32070, 11244, 11166, 31230, 7020, 2400000, 2900000, 59493152, 1, 607, 1604090624, 0);
					case 9:
						return new Monster(390, 1, 50160, 17580, 17480, 49040, 10840, 2500000, 3000000, 95873200, 1, 608, 1955377520, 0);
					case 10:
						return new Monster(400, 2, 16800, 16800, 67680, 65920, 23840, 4300000, 4800000, 52867840, 1, 609, 2383594286, 0);
					case 11:
						return new Monster(410, 1, 64000, 21200, 20950, 57600, 14100, 2600000, 3100000, 89568000, 1, 610, 2905588134, 0);
					case 12:
						return new Monster(420, 1, 62400, 21900, 21650, 59600, 14500, 2700000, 3200000, 95658000, 1, 611, 3541895722, 0);
					case 13:
						return new Monster(430, 2, 32000, 32400, 130400, 121600, 46400, 4300000, 4800000, 26833067, 1, 612, 4317551121, 0);
					case 14:
						return new Monster(440, 1, 132800, 46600, 46100, 127200, 30600, 2800000, 3300000, 216876000, 1, 613, 5263070725, 0);
					case 15:
						return new Monster(450, 1, 136800, 48000, 47500, 131200, 31400, 2900000, 3400000, 230256000, 1, 614, 6415653845, 0);
					case 16:
						return new Monster(460, 2, 59100, 59700, 240000, 226800, 85140, 4800000, 5200000, 54583200, 1, 615, 7820646238, 0);
					case 17:
						return new Monster(470, 3, 65400, 260400, 65100, 252000, 93270, 4300000, 4800000, 186984000, 1, 616, 9533324125, 0);
					case 18:
						return new Monster(480, 1, 320700, 112440, 111660, 312300, 70200, 3000000, 3500000, 594931520, 1, 617, 11621068912, 0);
					case 19:
						return new Monster(490, 1, 501600, 175800, 174480, 490400, 108400, 3100000, 3600000, 958732000, 1, 618, 14166018158, 0);
					case 20:
						return new Monster(500, 2, 168000, 168000, 676800, 659200, 238400, 6000000, 7000000, 176226133, 1, 619, 17268297088, 0);
					// case 1:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 600, 1, 1);
					// case 2:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 601, 1, 1);
					// case 3:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 602, 1, 1);
					// case 4:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 603, 1, 1);
					// case 5:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 604, 1, 1);
					// case 6:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 605, 1, 1);
					// case 7:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 606, 1, 1);
					// case 8:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 607, 1, 1);
					// case 9:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 608, 1, 1);
					// case 10:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 609, 1, 1);
					// case 11:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 610, 1, 1);
					// case 12:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 611, 1, 1);
					// case 13:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 612, 1, 1);
					// case 14:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 613, 1, 1);
					// case 15:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 614, 1, 1);
					// case 16:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 615, 1, 1);
					// case 17:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 616, 1, 1);
					// case 18:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 617, 1, 1);
					// case 19:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 618, 1, 1);
					// case 20:
					// 	return new Monster(1, 1, 1, 1, 1, 1, 1, 50000, 100000, 111111111, 1, 619, 1, 1);
				}
		}
	}

	public static function getShadowMonster($dung, $stage){
	}

	public static function getTowerMonster($stage){
		//raw stange +1
		$stage++;
		switch ($stage) {
			case 1:
				return new Monster((198 + 2 * $stage) , 1, 4194, 1697, 1665, 3985, 2589, 365356, 548792, 16019700, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 2:
				return new Monster((198 + 2 * $stage) , 2, 1714, 1682, 4240, 4034, 2621, 365356, 548792, 6551216, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 3:
				return new Monster((198 + 2 * $stage) , 3, 1733, 4288, 1696, 4081, 2655, 365356, 548792, 13385680, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 4:
				return new Monster((198 + 2 * $stage) , 1, 4340, 1746, 1715, 4128, 2690, 365356, 548792, 17089920, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 5:
				return new Monster((198 + 2 * $stage) , 1, 4385, 1763, 1733, 4178, 2726, 365356, 548792, 17464040, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 6:
				return new Monster((198 + 2 * $stage) , 2, 1780, 1750, 4434, 4228, 2756, 365356, 548792, 7136864, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 7:
				return new Monster((198 + 2 * $stage) , 1, 4482, 1794, 1766, 4275, 2790, 365356, 548792, 18211500, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 8:
				return new Monster((198 + 2 * $stage) , 2, 1811, 1784, 4532, 4321, 2826, 365356, 548792, 7432120, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 9:
				return new Monster((198 + 2 * $stage) , 2, 1828, 1804, 4577, 4370, 2857, 365356, 548792, 7586320, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 10:
				return new Monster((198 + 2 * $stage) , 1, 4627, 1847, 1818, 4420, 2891, 365356, 548792, 19359600, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 11:
				return new Monster((198 + 2 * $stage) , 2, 1864, 1835, 4678, 4463, 2925, 365356, 548792, 7890584, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 12:
				return new Monster((198 + 2 * $stage) , 2, 1877, 1853, 4721, 4513, 2960, 365356, 548792, 8051192, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 13:
				return new Monster((198 + 2 * $stage) , 1, 4771, 1898, 1869, 4561, 2991, 365356, 548792, 20524500, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 14:
				return new Monster((198 + 2 * $stage) , 1, 4820, 1909, 1887, 4610, 3027, 365356, 548792, 20929400, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 15:
				return new Monster((198 + 2 * $stage) , 1, 4870, 1928, 1907, 4655, 3060, 365356, 548792, 21319900, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 16:
				return new Monster((198 + 2 * $stage) , 2, 1943, 1925, 4914, 4705, 3092, 365356, 548792, 8694840, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 17:
				return new Monster((198 + 2 * $stage) , 1, 4964, 1962, 1940, 4755, 3126, 365356, 548792, 22158300, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 18:
				return new Monster((198 + 2 * $stage) , 3, 1976, 5013, 1958, 4800, 3163, 365356, 548792, 18048000, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 19:
				return new Monster((198 + 2 * $stage) , 1, 5059, 1993, 1975, 4848, 3198, 365356, 548792, 22979520, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 20:
				return new Monster((198 + 2 * $stage) , 3, 2010, 5107, 1992, 4897, 3228, 365356, 548792, 18726128, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 21:
				return new Monster((198 + 2 * $stage) , 1, 5157, 2024, 2009, 4945, 3262, 365356, 548792, 23834900, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 22:
				return new Monster((198 + 2 * $stage) , 1, 5206, 2043, 2028, 4990, 3295, 365356, 548792, 24251400, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 23:
				return new Monster((198 + 2 * $stage) , 1, 5252, 2058, 2042, 5040, 3330, 365356, 548792, 24696000, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 24:
				return new Monster((198 + 2 * $stage) , 1, 5302, 2077, 2061, 5090, 3362, 365356, 548792, 25144600, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 25:
				return new Monster((198 + 2 * $stage) , 2, 2092, 2078, 5352, 5135, 3397, 365356, 548792, 10228920, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 26:
				return new Monster((198 + 2 * $stage) , 3, 2108, 5400, 2094, 5183, 3429, 365356, 548792, 20814928, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 27:
				return new Monster((198 + 2 * $stage) , 3, 2141, 5446, 2129, 5237, 3475, 365356, 548792, 21199376, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 28:
				return new Monster((198 + 2 * $stage) , 1, 5498, 2173, 2162, 5290, 3522, 365356, 548792, 26979000, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 29:
				return new Monster((198 + 2 * $stage) , 1, 5549, 2207, 2198, 5339, 3567, 365356, 548792, 27442460, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 30:
				return new Monster((198 + 2 * $stage) , 1, 5596, 2241, 2228, 5393, 3613, 365356, 548792, 27935740, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 31:
				return new Monster((198 + 2 * $stage) , 1, 5646, 2275, 2263, 5448, 3657, 365356, 548792, 28438560, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 32:
				return new Monster((198 + 2 * $stage) , 2, 2309, 2296, 5698, 5497, 3703, 365356, 548792, 11565688, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 33:
				return new Monster((198 + 2 * $stage) , 1, 5744, 2340, 2331, 5551, 3751, 365356, 548792, 29420300, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 34:
				return new Monster((198 + 2 * $stage) , 1, 5796, 2377, 2362, 5603, 3794, 365356, 548792, 29920020, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 35:
				return new Monster((198 + 2 * $stage) , 1, 5846, 2405, 2396, 5657, 3840, 365356, 548792, 30434660, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 36:
				return new Monster((198 + 2 * $stage) , 3, 2438, 5895, 2429, 5708, 3886, 365356, 548792, 24749888, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 37:
				return new Monster((198 + 2 * $stage) , 3, 2473, 5947, 2464, 5763, 3930, 365356, 548792, 25172784, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 38:
				return new Monster((198 + 2 * $stage) , 1, 5995, 2507, 2498, 5816, 3975, 365356, 548792, 31988000, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 39:
				return new Monster((198 + 2 * $stage) , 1, 6046, 2538, 2531, 5863, 4022, 365356, 548792, 32481020, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 40:
				return new Monster((198 + 2 * $stage) , 1, 6092, 2572, 2566, 5917, 4069, 365356, 548792, 33016860, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 41:
				return new Monster((198 + 2 * $stage) , 2, 2606, 2600, 6144, 5972, 4112, 365356, 548792, 13425056, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 42:
				return new Monster((198 + 2 * $stage) , 2, 2641, 2631, 6194, 6021, 4158, 365356, 548792, 13631544, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 43:
				return new Monster((198 + 2 * $stage) , 1, 6245, 2671, 2668, 6073, 4203, 365356, 548792, 34616100, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 44:
				return new Monster((198 + 2 * $stage) , 3, 2705, 6295, 2699, 6130, 4248, 365356, 548792, 28148960, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 45:
				return new Monster((198 + 2 * $stage) , 3, 2741, 6342, 2733, 6178, 4295, 365356, 548792, 28567072, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 46:
				return new Monster((198 + 2 * $stage) , 1, 6396, 2771, 2765, 6231, 4340, 365356, 548792, 36264420, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 47:
				return new Monster((198 + 2 * $stage) , 3, 2804, 6444, 2798, 6284, 4385, 365356, 548792, 29459392, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 48:
				return new Monster((198 + 2 * $stage) , 1, 2838, 2834, 6492, 6340, 4430, 365356, 548792, 14962400, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 49:
				return new Monster((198 + 2 * $stage) , 2, 2874, 2866, 6542, 6388, 4477, 365356, 548792, 15177888, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 50:
				return new Monster((198 + 2 * $stage) , 1, 6593, 2905, 2902, 6441, 4523, 365356, 548792, 38517180, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 51:
				return new Monster((198 + 2 * $stage) , 1, 6640, 2937, 2932, 6494, 4569, 365356, 548792, 39093880, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 52:
				return new Monster((198 + 2 * $stage) , 1, 2977, 6707, 2973, 6555, 4612, 365356, 548792, 31778640, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 53:
				return new Monster((198 + 2 * $stage) , 3, 6776, 3010, 3013, 6616, 4654, 365356, 548792, 40357600, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 54:
				return new Monster((198 + 2 * $stage) , 2, 3047, 3052, 6839, 6679, 4699, 365356, 548792, 16403624, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 55:
				return new Monster((198 + 2 * $stage) , 1, 6906, 3089, 3091, 6741, 4741, 365356, 548792, 41659380, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 56:
				return new Monster((198 + 2 * $stage) , 1, 6973, 3121, 3132, 6805, 4784, 365356, 548792, 42327100, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 57:
				return new Monster((198 + 2 * $stage) , 1, 7040, 3160, 3173, 6864, 4828, 365356, 548792, 42968640, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 58:
				return new Monster((198 + 2 * $stage) , 1, 3197, 7106, 3211, 6930, 4871, 365356, 548792, 34927200, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 59:
				return new Monster((198 + 2 * $stage) , 3, 3235, 3249, 7171, 6990, 4915, 365356, 548792, 17726640, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 60:
				return new Monster((198 + 2 * $stage) , 1, 7240, 3270, 3291, 7049, 4958, 365356, 548792, 44972620, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 61:
				return new Monster((198 + 2 * $stage) , 1, 7303, 3309, 3331, 7112, 5005, 365356, 548792, 45659040, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 62:
				return new Monster((198 + 2 * $stage) , 3, 7370, 3348, 3368, 7173, 5043, 365356, 548792, 46337580, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 63:
				return new Monster((198 + 2 * $stage) , 2, 7436, 3382, 3409, 7236, 5088, 365356, 548792, 47034000, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 64:
				return new Monster((198 + 2 * $stage) , 1, 3148, 7502, 3447, 7298, 5134, 365356, 548792, 38183136, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 65:
				return new Monster((198 + 2 * $stage) , 1, 7567, 3458, 3487, 7359, 5177, 365356, 548792, 48422220, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 66:
				return new Monster((198 + 2 * $stage) , 1, 7634, 3495, 3528, 7424, 5217, 365356, 548792, 49146880, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 67:
				return new Monster((198 + 2 * $stage) , 1, 3531, 7701, 3568, 7483, 5265, 365356, 548792, 39869424, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 68:
				return new Monster((198 + 2 * $stage) , 2, 3567, 3607, 7767, 7544, 5307, 365356, 548792, 20217920, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 69:
				return new Monster((198 + 2 * $stage) , 1, 7833, 3609, 3645, 7606, 5347, 365356, 548792, 51264440, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 70:
				return new Monster((198 + 2 * $stage) , 1, 7900, 3641, 3687, 7669, 5392, 365356, 548792, 51995820, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 71:
				return new Monster((198 + 2 * $stage) , 1, 7967, 3680, 3729, 7728, 5436, 365356, 548792, 52704960, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 72:
				return new Monster((198 + 2 * $stage) , 1, 8031, 3717, 3764, 7792, 5480, 365356, 548792, 53453120, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 73:
				return new Monster((198 + 2 * $stage) , 1, 3755, 3804, 8098, 7855, 5523, 365356, 548792, 21679800, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 74:
				return new Monster((198 + 2 * $stage) , 3, 8167, 3790, 3845, 7914, 5566, 365356, 548792, 54923160, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 75:
				return new Monster((198 + 2 * $stage) , 1, 8229, 3829, 3886, 7977, 5611, 365356, 548792, 55679460, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 76:
				return new Monster((198 + 2 * $stage) , 1, 8297, 3868, 3923, 8038, 5651, 365356, 548792, 56426760, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 77:
				return new Monster((198 + 2 * $stage) , 1, 8541, 3976, 4007, 8268, 5767, 365356, 548792, 58372080, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 78:
				return new Monster((198 + 2 * $stage) , 1, 8787, 4088, 4093, 8494, 5881, 365356, 548792, 60307400, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 79:
				return new Monster((198 + 2 * $stage) , 1, 4200, 9030, 4174, 8726, 5993, 365356, 548792, 49842912, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 80:
				return new Monster((198 + 2 * $stage) , 1, 9274, 4313, 4256, 8956, 6107, 365356, 548792, 64304080, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 81:
				return new Monster((198 + 2 * $stage) , 1, 9996, 4642, 4556, 9639, 6534, 365356, 548792, 69593584, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 82:
				return new Monster((198 + 2 * $stage) , 1, 10761, 4999, 4877, 10373, 6989, 365356, 548792, 75311608, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 83:
				return new Monster((198 + 2 * $stage) , 1, 11583, 5380, 5215, 11157, 7466, 365356, 548792, 81447928, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 84:
				return new Monster((198 + 2 * $stage) , 1, 12460, 5781, 5578, 11994, 7980, 365356, 548792, 88041464, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 85:
				return new Monster((198 + 2 * $stage) , 3, 6214, 5957, 12883, 8525, 11994, 365356, 548792, 95076544, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 86:
				return new Monster((198 + 2 * $stage) , 2, 3567, 3607, 7767, 7544, 5307, 365356, 548792, 39498144, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 87:
				return new Monster((198 + 2 * $stage) , 1, 12410, 5781, 5578, 11994, 7980, 365356, 548792, 45123431, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 88:
				return new Monster((198 + 2 * $stage) , 1, 12820, 5781, 5578, 11994, 7980, 365356, 548792, 57432123, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 89:
				return new Monster((198 + 2 * $stage) , 1, 13230, 5781, 5578, 12394, 7980, 365356, 548792, 75123785, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 90:
				return new Monster((198 + 2 * $stage) , 1, 14360, 5781, 5578, 12994, 7980, 365356, 548792, 95126412, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 91:
				return new Monster((198 + 2 * $stage) , 1, 14440, 5781, 5578, 13594, 7980, 365356, 548792, 63234112, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 92:
				return new Monster((198 + 2 * $stage) , 1, 14830, 5781, 5578, 13994, 7980, 365356, 548792, 84412354, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 93:
				return new Monster((198 + 2 * $stage) , 1, 15020, 5781, 5578, 14994, 7980, 365356, 548792, 96543213, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 94:
				return new Monster((198 + 2 * $stage) , 1, 15430, 5781, 5578, 14394, 7980, 365356, 548792, 80541035, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 95:
				return new Monster((198 + 2 * $stage) , 1, 15680, 5781, 5578, 15994, 7980, 365356, 548792, 93312345, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 96:
				return new Monster((198 + 2 * $stage) , 1, 16070, 5781, 5578, 15994, 7980, 365356, 548792, 53354621, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 97:
				return new Monster((198 + 2 * $stage) , 1, 16210, 5781, 5578, 16494, 7980, 365356, 548792, 65432163, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 98:
				return new Monster((198 + 2 * $stage) , 1, 16420, 5781, 5578, 16994, 7980, 365356, 548792, 85531567, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 99:
				return new Monster((198 + 2 * $stage) , 1, 17450, 5781, 5578, 17594, 7980, 365356, 548792, 98543123, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 100:
				return new Monster((198 + 2 * $stage) , 1, 18000, 5781, 5578, 18994, 7980, 365356, 548792, 100000000, 15087, -1 *(399 + $stage) , 178017293, -1);
		}
	}

	public static function getGuildPortalMonster($lvl){
		$stage = (($lvl - 1) % 10) + 1;
		// $lvl++;
		// var_dump($stage);
		// var_dump($lvl);
		$lvl++;
		switch($lvl){
			case 1:
				return new Monster(200, 3, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 500, 178017293, -1);
			case 2:
				return new Monster(206, 3, 1057, 4257, 1057, 1394050, 1570, 365356, 548792, 1154273408, 15087, 501, 178017293, -1);
			case 3:
				return new Monster(212, 1, 4644, 1648, 1619, 1504650, 1141, 365356, 548792, 1602452224, 15087, 502, 178017293, -1);
			case 4:
				return new Monster(218, 1, 4989, 1755, 1737, 1638000, 1257, 365356, 548792, 1793609984, 15087, 503, 178017293, -1);
			case 5:
				return new Monster(224, 1, 5359, 1867, 1847, 1761200, 1324, 365356, 548792, 1981350016, 15087, 504, 178017293, -1);
			case 6:
				return new Monster(230, 1, 6394, 2047, 2013, 1703665, 1405, 365356, 548792, 1967733120, 15087, 505, 178017293, -1);
			case 7:
				return new Monster(236, 1, 7864, 2215, 2192, 1664159, 1556, 365356, 548792, 1972028416, 15087, 506, 178017293, -1);
			case 8:
				return new Monster(242, 3, 1675, 7273, 1671, 2044152, 2455, 365356, 548792, 1986915712, 15087, 507, 178017293, -1);
			case 9:
				return new Monster(248, 1, 10527, 2536, 2458, 1603929, 1721, 365356, 548792, 1996891648, 15087, 508, 178017293, -1);
			case 10:
				return new Monster(254, 2, 1879, 1909, 7710, 2465050, 2774, 365356, 548792, 1257175552, 15087, 509, 178017293, -1);
			
			case 11:
				return new Monster(260 , 3, 2011, 11354, 2005, 1890766, 2947, 365356, 548792, 1973959680, 15087, 510, 178017293, -1);
			case 12:
				return new Monster(266, 1, 16374, 3029, 2946, 1481540, 2038, 365356, 548792, 1977855872, 15087, 511, 178017293, -1);
			case 13:
				return new Monster(274, 2, 2254, 2288, 9230, 2969400, 3313, 365356, 548792, 1621292416, 15087, 512, 178017293, -1);
			case 14:
				return new Monster(280, 2, 2365, 2412, 9744, 3140200, 3494, 365356, 548792, 1752231552, 15087, 513, 178017293, -1);
			case 15:
				return new Monster(286, 1, 24734, 3588, 3501, 1384461, 2394, 365356, 548792, 1972856960, 15087, 514, 178017293, -1);
			case 16:
				return new Monster(292, 3, 2700, 22630, 2691, 1691729, 3907, 365356, 548792, 1969172608, 15087, 515, 178017293, -1);
			case 17:
				return new Monster(298, 3, 2823, 25316, 2813, 1675855, 4104, 365356, 548792, 1990915712, 15087, 516, 178017293, -1);
			case 18:
				return new Monster(304, 1, 35079, 4151, 4060, 1315900, 2748, 365356, 548792, 1993588480, 15087, 517, 178017293, -1);
			case 19:
				return new Monster(310, 1, 37208, 4226, 4175, 1294388, 2787, 365356, 548792, 1999829504, 15087, 518, 178017293, -1);
			case 20:
				return new Monster(314, 2, 3022, 3073, 15808, 3164802, 4430, 365356, 548792, 1993825280, 15087, 519, 178017293, -1);
		
			case 21:
				return new Monster(320, 1, 42026, 4404, 4313, 1240767, 2893, 365356, 548792, 1991431040, 15087, 520, 178017293, -1);
			case 22:
				return new Monster(326, 2, 3164, 3215, 17814, 3046282, 4568, 365356, 548792, 1992268416, 15087, 521, 178017293, -1);
			case 23:
				return new Monster(332, 2, 3203, 3254, 18881, 2978933, 4683, 365356, 548792, 1983969408, 15087, 522, 178017293, -1);
			case 24:
				return new Monster(338, 1, 50181, 4657, 4566, 1165639, 3038, 365356, 548792, 1975758080, 15087, 523, 178017293, -1);
			case 25:
				return new Monster(344, 3, 3385, 42562, 3375, 1428058, 4831, 365356, 548792, 1970720000, 15087, 524, 178017293, -1);
			case 26:
				return new Monster(350, 1, 56194, 4795, 4756, 1117865, 3156, 365356, 548792, 1961853056, 15087, 525, 178017293, -1);
			case 27:
				return new Monster(356, 1, 73865, 5464, 5413, 1111913, 3535, 365356, 548792, 1984764672, 15087, 526, 178017293, -1);
			case 28:
				return new Monster(362, 3, 4126, 66187, 4076, 1373206, 5868, 365356, 548792, 1993895168, 15087, 527, 178017293, -1);
			case 29:
				return new Monster(368, 1, 94038, 6040, 6001, 1070322, 3867, 365356, 548792, 1974744064, 15087, 528, 178017293, -1);
			case 30:
				return new Monster(374, 2, 4484, 4535, 41801, 2658346, 6480, 365356, 548792, 1993759488, 15087, 529, 178017293, -1);
				// end of known data
		
			case 31:
				return new Monster(380, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 530, 178017293, -1);
			case 32:
				return new Monster(386, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 531, 178017293, -1);
			case 33:
				return new Monster(392, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 532, 178017293, -1);
			case 34:
				return new Monster(398, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 533, 178017293, -1);
			case 35:
				return new Monster(404, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 534, 178017293, -1);
			case 36:
				return new Monster(410, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 535, 178017293, -1);
			case 37:
				return new Monster(416, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 536, 178017293, -1);
			case 38:
				return new Monster(422, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 537, 178017293, -1);
			case 39:
				return new Monster(428, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 538, 178017293, -1);
			case 40:
				return new Monster(434, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 539, 178017293, -1);
		
			case 41:
				return new Monster(440, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 540, 178017293, -1);
			case 42:
				return new Monster(446, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 541, 178017293, -1);
			case 43:
				return new Monster(452, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 542, 178017293, -1);
			case 44:
				return new Monster(458, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 543, 178017293, -1);
			case 45:
				return new Monster(464, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 544, 178017293, -1);
			case 46:
				return new Monster(470, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 545, 178017293, -1);
			case 47:
				return new Monster(476, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 546, 178017293, -1);
			case 48:
				return new Monster(482, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 547, 178017293, -1);
			case 49:
				return new Monster(488, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 548, 178017293, -1);
			case 50:
				return new Monster(494, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 549, 178017293, -1);
		
		}
	}

	public static function getPortalMonster($lvl){
		$stage = (($lvl - 1) % 10) + 1;
		switch ($lvl) {
				case 1:
					return new Monster((194 + 6 * $stage) , 1, 3835, 1344, 1330, 35760, 945, 365356, 548792, 35938800, 15087, (549 + $stage) , 178017293, -1);
				case 2:
					return new Monster((194 + 6 * $stage) , 1, 4308, 1490, 1475, 39810, 1077, 365356, 548792, 41203352, 15087, (549 + $stage) , 178017293, -1);
				case 3:
					return new Monster((194 + 6 * $stage) , 1, 4654, 1646, 1577, 43090, 1141, 365356, 548792, 45890848, 15087, (549 + $stage) , 178017293, -1);
				case 4:
					return new Monster((194 + 6 * $stage) , 3, 1259, 5010, 1257, 46900, 1811, 365356, 548792, 41084400, 15087, (549 + $stage) , 178017293, -1);
				case 5:
					return new Monster((194 + 6 * $stage) , 1, 5357, 1877, 1857, 50300, 1334, 365356, 548792, 56587500, 15087, (549 + $stage) , 178017293, -1);
				case 6:
					return new Monster((194 + 6 * $stage) , 2, 1448, 1473, 5852, 52910, 2092, 365356, 548792, 24444420, 15087, (549 + $stage) , 178017293, -1);
				case 7:
					return new Monster((194 + 6 * $stage) , 1, 6307, 2225, 2190, 59480, 1514, 365356, 548792, 70483800, 15087, (549 + $stage) , 178017293, -1);
				case 8:
					return new Monster((194 + 6 * $stage) , 1, 6707, 2351, 2327, 63300, 1641, 365356, 548792, 76909504, 15087, (549 + $stage) , 178017293, -1);
				case 9:
					return new Monster((194 + 6 * $stage) , 3, 1825, 7181, 1768, 67370, 2599, 365356, 548792, 67100520, 15087, (549 + $stage) , 178017293, -1);
				case 10:
					return new Monster((194 + 6 * $stage) , 1, 7575, 2670, 2643, 71650, 1804, 365356, 548792, 91353752, 15087, (549 + $stage) , 178017293, -1);
				
				case 11:
					return new Monster((254 + 6 * $stage) , 3, 2021, 8052, 2015, 76260, 2945, 365356, 548792, 79615440, 15087, (559 + $stage) , 178017293, -1);
				case 12:
					return new Monster((254 + 6 * $stage) , 2, 2145, 2137, 8676, 79570, 3108, 365356, 548792, 42490380, 15087, (559 + $stage) , 178017293, -1);
				case 13:
					return new Monster((254 + 6 * $stage) , 2, 2252, 2298, 9240, 84820, 3271, 365356, 548792, 46311720, 15087, (559 + $stage) , 178017293, -1);
				case 14:
					return new Monster((254 + 6 * $stage) , 3, 2411, 9601, 2403, 91250, 3501, 365356, 548792, 101835000, 15087, (559 + $stage) , 178017293, -1);
				case 15:
					return new Monster((254 + 6 * $stage) , 1, 10178, 3546, 3499, 96320, 2404, 365356, 548792, 137256000, 15087, (559 + $stage) , 178017293, -1);
				case 16:
					return new Monster((254 + 6 * $stage) , 1, 10716, 3773, 3736, 102050, 2507, 365356, 548792, 148482752, 15087, (559 + $stage) , 178017293, -1);
				case 17:
					return new Monster((254 + 6 * $stage) , 3, 2833, 11280, 2823, 107530, 4102, 365356, 548792, 127745640, 15087, (559 + $stage) , 178017293, -1);
				case 18:
					return new Monster((254 + 6 * $stage) , 2, 2942, 2941, 11900, 110310, 4250, 365356, 548792, 66847860, 15087, (559 + $stage) , 178017293, -1);
				case 19:
					return new Monster((254 + 6 * $stage) , 2, 2993, 3032, 12183, 112620, 4313, 365356, 548792, 69599160, 15087, (559 + $stage) , 178017293, -1);
				case 20:
					return new Monster((254 + 6 * $stage) , 2, 3032, 3083, 12402, 115330, 4440, 365356, 548792, 72657904, 15087, (559 + $stage) , 178017293, -1);
			
				case 21:
					return new Monster((314 + 6 * $stage) , 3, 3163, 12462, 3113, 119120, 4513, 365356, 548792, 152950080, 15087, (569 + $stage) , 178017293, -1);
				case 22:
					return new Monster((314 + 6 * $stage) , 3, 3214, 12733, 3204, 121430, 4576, 365356, 548792, 158830432, 15087, (569 + $stage) , 178017293, -1);
				case 23:
					return new Monster((314 + 6 * $stage) , 3, 3253, 12964, 3243, 124140, 4703, 365356, 548792, 165354480, 15087, (569 + $stage) , 178017293, -1);
				case 24:
					return new Monster((314 + 6 * $stage) , 2, 3304, 3303, 13354, 124730, 4756, 365356, 548792, 84566944, 15087, (569 + $stage) , 178017293, -1);
				case 25:
					return new Monster((314 + 6 * $stage) , 3, 3395, 13454, 3385, 128640, 4829, 365356, 548792, 177853200, 15087, (569 + $stage) , 178017293, -1);
				case 26:
					return new Monster((314 + 6 * $stage) , 1, 13674, 4805, 4754, 131350, 3166, 365356, 548792, 230519248, 15087, (569 + $stage) , 178017293, -1);
				case 27:
					return new Monster((314 + 6 * $stage) , 3, 3909, 15600, 3899, 150620, 5613, 365356, 548792, 215085360, 15087, (569 + $stage) , 178017293, -1);
				case 28:
					return new Monster((314 + 6 * $stage) , 1, 16416, 5727, 5728, 158250, 3680, 365356, 548792, 287223744, 15087, (569 + $stage) , 178017293, -1);
				case 29:
					return new Monster((314 + 6 * $stage) , 2, 4283, 4334, 17409, 165280, 6139, 365356, 548792, 121976640, 15087, (569 + $stage) , 178017293, -1);
				case 30:
					return new Monster((314 + 6 * $stage) , 2, 4494, 4533, 18268, 173990, 6478, 365356, 548792, 130492496, 15087, (569 + $stage) , 178017293, -1);
			
				case 31:
					return new Monster((374 + 6 * $stage) , 3, 4733, 18756, 4671, 182060, 6713, 365356, 548792, 277459456, 15087, (579 + $stage) , 178017293, -1);
				case 32:
					return new Monster((374 + 6 * $stage) , 1, 19740, 6929, 6890, 192010, 4328, 365356, 548792, 371539360, 15087, (579 + $stage) , 178017293, -1);
				case 33:
					return new Monster((374 + 6 * $stage) , 1, 20459, 7164, 7125, 199200, 4505, 365356, 548792, 391428000, 15087, (579 + $stage) , 178017293, -1);
				case 34:
					return new Monster((374 + 6 * $stage) , 1, 21242, 7417, 7366, 206510, 4646, 365356, 548792, 411987456, 15087, (579 + $stage) , 178017293, -1);
				case 35:
					return new Monster((374 + 6 * $stage) , 2, 5477, 5528, 22179, 212580, 7809, 365356, 548792, 172189792, 15087, (579 + $stage) , 178017293, -1);
					// end of known data :(
				case 36:
					return new Monster((374 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (579 + $stage) , 178017293, -1);
				case 37:
					return new Monster((374 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (579 + $stage) , 178017293, -1);
				case 38:
					return new Monster((374 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (579 + $stage) , 178017293, -1);
				case 39:
					return new Monster((374 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (579 + $stage) , 178017293, -1);
				case 40:
					return new Monster((374 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (579 + $stage) , 178017293, -1);
			
				case 41:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 42:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 43:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 44:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 45:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 46:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 47:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 48:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 49:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 50:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				
		}
	}

	public static function getGuildRaid($lvl){
		switch ($lvl) {
			case 0:
			return [new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(16, 3, 79, 185, 78, 373, 89, 266, 798, 25364, 400, 74, 0, 0),
					new Monster(26, 1, 341, 128, 115, 741, 134, 735, 2205, 100035, 1300, 24, 0, 0),
					new Monster(36, 3, 133, 571, 141, 1634, 218, 2262, 6786, 241832, 900, 74, 0, 0),
					new Monster(50, 3, 209, 804, 202, 5329, 277, 4536, 13608, 1087116, 1250, 195, 0, 0)];
			case 1:
			return [new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(12, 1, 114, 64, 56, 191, 48, 84, 252, 12415, 600, 74, 0, 0),
					new Monster(16, 3, 79, 185, 78, 248, 89, 266, 798, 16864, 400, 24, 0, 0),
					new Monster(26, 1, 341, 128, 115, 741, 134, 735, 2205, 100035, 1300, 74, 0, 0),
					new Monster(36, 3, 133, 571, 141, 980, 218, 2262, 6786, 145040, 900, 24, 0, 0),
					new Monster(46, 1, 729, 204, 173, 2048, 236, 2993, 8979, 481280, 2300, 74, 0, 0),
					new Monster(60, 3, 256, 988, 247, 7220, 356, 6831, 20493, 1761680, 1500, 193, 0, 0)];
			case 2:
			return [new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(14, 1, 141, 74, 65, 235, 61, 135, 405, 17625, 700, 74, 0, 0),
					new Monster(18, 1, 203, 95, 84, 321, 88, 273, 819, 30495, 900, 24, 0, 0),
					new Monster(22, 2, 92, 94, 287, 376, 130, 1131, 3393, 17296, 220, 74, 0, 0),
					new Monster(26, 1, 341, 128, 115, 494, 134, 735, 2205, 66690, 1300, 24, 0, 0),
					new Monster(36, 3, 133, 571, 141, 980, 218, 2262, 6786, 145040, 900, 74, 0, 0),
					new Monster(46, 1, 729, 204, 173, 1536, 236, 2993, 8979, 360960, 2300, 24, 0, 0),
					new Monster(56, 3, 237, 912, 228, 2584, 327, 5888, 17664, 589152, 1400, 74, 0, 0),
					new Monster(70, 1, 1178, 365, 342, 9120, 323, 7670, 23010, 3237600, 3500, 194, 0, 0)];
			case 3:
			return [new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 10, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 19, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 41, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 11, 0, 0),
					new Monster(12, 1, 114, 64, 56, 191, 48, 84, 252, 12415, 600, 39, 0, 0),
					new Monster(16, 3, 79, 185, 78, 248, 89, 266, 798, 16864, 400, 10, 0, 0),
					new Monster(20, 3, 95, 250, 95, 330, 113, 494, 1482, 27720, 500, 19, 0, 0),
					new Monster(24, 1, 301, 119, 111, 452, 123, 589, 1767, 56500, 1200, 41, 0, 0),
					new Monster(28, 1, 373, 131, 118, 539, 144, 874, 2622, 78155, 1400, 11, 0, 0),
					new Monster(32, 3, 147, 461, 152, 524, 194, 1598, 4794, 69168, 800, 39, 0, 0),
					new Monster(36, 3, 133, 571, 141, 653, 218, 2262, 6786, 96644, 900, 10, 0, 0),
					new Monster(46, 1, 729, 204, 173, 1024, 236, 2993, 8979, 240640, 2300, 19, 0, 0),
					new Monster(56, 3, 237, 912, 228, 1938, 327, 5888, 17664, 441864, 1400, 41, 0, 0),
					new Monster(66, 3, 285, 1102, 275, 3344, 399, 8436, 25308, 896192, 1650, 11, 0, 0),
					new Monster(80, 3, 351, 1368, 342, 11020, 498, 12878, 38634, 3570480, 2000, 196, 0, 0)];
			case 4:
			return [new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 86, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 144, 0, 0),
					new Monster(14, 1, 141, 74, 65, 235, 61, 135, 405, 17625, 700, 87, 0, 0),
					new Monster(18, 1, 203, 95, 84, 321, 88, 273, 819, 30495, 900, 121, 0, 0),
					new Monster(22, 2, 92, 94, 287, 376, 130, 1160, 3480, 17296, 220, 191, 0, 0),
					new Monster(26, 1, 341, 128, 115, 494, 134, 735, 2205, 66690, 1300, 86, 0, 0),
					new Monster(30, 2, 119, 123, 437, 530, 183, 2552, 7656, 32860, 300, 53, 0, 0),
					new Monster(34, 3, 135, 526, 136, 575, 205, 1961, 5883, 80500, 850, 191, 0, 0),
					new Monster(38, 1, 562, 169, 153, 756, 185, 1881, 5643, 147420, 1900, 86, 0, 0),
					new Monster(42, 3, 194, 689, 212, 765, 234, 3243, 9729, 131580, 1050, 53, 0, 0),
					new Monster(46, 1, 729, 204, 173, 1024, 236, 2993, 8979, 240640, 2300, 191, 0, 0),
					new Monster(56, 3, 237, 912, 228, 1292, 327, 5888, 17664, 294576, 1400, 86, 0, 0),
					new Monster(66, 3, 285, 1102, 275, 2508, 399, 8547, 25641, 672144, 1650, 144, 0, 0),
					new Monster(76, 3, 332, 1292, 323, 4104, 470, 11570, 34710, 1264032, 1900, 130, 0, 0),
					new Monster(90, 1, 1558, 508, 484, 12920, 418, 13260, 39780, 5878600, 4500, 197, 0, 0)];
			case 5:
			return [new Monster(16, 3, 79, 185, 78, 248, 89, 266, 798, 16864, 400, 74, 0, 0),
					new Monster(20, 3, 95, 250, 95, 330, 113, 494, 1482, 27720, 500, 136, 0, 0),
					new Monster(24, 1, 301, 119, 111, 452, 123, 589, 1767, 56500, 1200, 71, 0, 0),
					new Monster(28, 1, 373, 131, 118, 539, 144, 874, 2622, 78155, 1400, 71, 0, 0),
					new Monster(32, 3, 147, 461, 152, 524, 194, 1598, 4794, 69168, 800, 50, 0, 0),
					new Monster(36, 3, 133, 571, 141, 653, 218, 2262, 6786, 96644, 900, 134, 0, 0),
					new Monster(40, 1, 583, 196, 181, 845, 226, 2065, 6195, 173225, 2000, 57, 0, 0),
					new Monster(44, 2, 181, 180, 741, 780, 246, 6675, 20025, 70200, 440, 74, 0, 0),
					new Monster(48, 1, 706, 230, 218, 1069, 233, 3053, 9159, 261905, 2400, 136, 0, 0),
					new Monster(52, 3, 218, 836, 209, 1141, 299, 4956, 14868, 241892, 1300, 71, 0, 0),
					new Monster(56, 3, 237, 912, 228, 1292, 327, 5888, 17664, 294576, 1400, 71, 0, 0),
					new Monster(66, 3, 285, 1102, 275, 1672, 399, 8547, 25641, 448096, 1650, 71, 0, 0),
					new Monster(76, 3, 332, 1292, 323, 3078, 470, 11570, 34710, 948024, 1900, 74, 0, 0),
					new Monster(86, 1, 1482, 479, 456, 4864, 399, 12069, 36207, 2115840, 4300, 112, 0, 0),
					new Monster(100, 3, 446, 1748, 437, 14820, 641, 20825, 62475, 5987280, 2500, 198, 0, 0)];
			case 6:
			return [new Monster(26, 1, 341, 128, 115, 494, 134, 735, 2205, 66690, 1300, 186, 0, 0),
					new Monster(30, 2, 119, 123, 437, 530, 183, 2552, 7656, 32860, 300, 104, 0, 0),
					new Monster(34, 3, 135, 526, 136, 575, 205, 1961, 5883, 80500, 850, 117, 0, 0),
					new Monster(38, 1, 562, 169, 153, 756, 185, 1881, 5643, 147420, 1900, 124, 0, 0),
					new Monster(42, 3, 194, 689, 212, 765, 234, 3243, 9729, 131580, 1050, 113, 0, 0),
					new Monster(46, 1, 729, 204, 173, 1024, 236, 2993, 8979, 240640, 2300, 3, 0, 0),
					new Monster(50, 3, 209, 804, 202, 1065, 277, 4617, 13851, 217260, 1250, 1, 0, 0),
					new Monster(54, 1, 874, 251, 228, 1216, 247, 4312, 12936, 334400, 2700, 113, 0, 0),
					new Monster(58, 3, 247, 950, 237, 1368, 342, 6432, 19296, 322848, 1450, 3, 0, 0),
					new Monster(62, 1, 1026, 308, 285, 1520, 285, 5871, 17613, 478800, 3100, 1, 0, 0),
					new Monster(66, 3, 285, 1102, 275, 1672, 399, 8547, 25641, 448096, 1650, 124, 0, 0),
					new Monster(76, 3, 332, 1292, 323, 2052, 470, 11570, 34710, 632016, 1900, 186, 0, 0),
					new Monster(86, 1, 1482, 479, 456, 3648, 399, 12069, 36207, 1586880, 4300, 104, 0, 0),
					new Monster(96, 1, 1672, 551, 527, 5624, 446, 15288, 45864, 2727640, 4800, 117, 0, 0),
					new Monster(110, 3, 494, 1938, 484, 16720, 712, 25608, 76824, 7423680, 2750, 199, 0, 0)];
			case 7:
			return [new Monster(36, 3, 133, 571, 141, 653, 218, 2262, 6786, 96644, 900, 106, 0, 0),
					new Monster(40, 1, 583, 196, 181, 845, 226, 2065, 6195, 173225, 2000, 5, 0, 0),
					new Monster(44, 2, 181, 180, 741, 780, 246, 6675, 20025, 70200, 440, 95, 0, 0),
					new Monster(48, 1, 706, 230, 218, 1069, 233, 3053, 9159, 261905, 2400, 191, 0, 0),
					new Monster(52, 3, 218, 836, 209, 1141, 299, 4956, 14868, 241892, 1300, 95, 0, 0),
					new Monster(56, 3, 237, 912, 228, 1292, 327, 5888, 17664, 294576, 1400, 86, 0, 0),
					new Monster(60, 3, 256, 988, 247, 1444, 356, 6831, 20493, 352336, 1500, 108, 0, 0),
					new Monster(64, 1, 1064, 323, 299, 1596, 294, 6313, 18939, 518700, 3200, 6, 0, 0),
					new Monster(68, 1, 1140, 351, 327, 1748, 313, 7245, 21735, 603060, 3400, 106, 0, 0),
					new Monster(72, 3, 313, 1216, 304, 1900, 441, 10248, 30744, 554800, 1800, 5, 0, 0),
					new Monster(76, 3, 332, 1292, 323, 2052, 470, 11570, 34710, 632016, 1900, 95, 0, 0),
					new Monster(86, 1, 1482, 479, 456, 2432, 399, 12069, 36207, 1057920, 4300, 191, 0, 0),
					new Monster(96, 1, 1672, 551, 527, 4218, 446, 15288, 45864, 2045730, 4800, 95, 0, 0),
					new Monster(106, 3, 475, 1862, 465, 6384, 684, 23749, 71247, 2732352, 2650, 86, 0, 0),
					new Monster(120, 2, 522, 541, 2204, 17860, 779, 57460, 172380, 4322120, 1200, 200, 0, 0)];
			case 8:
			return [new Monster(46, 1, 729, 204, 173, 1024, 236, 2993, 8979, 240640, 2300, 84, 0, 0),
					new Monster(50, 3, 209, 804, 202, 1065, 277, 4617, 13851, 217260, 1250, 6, 0, 0),
					new Monster(54, 1, 874, 251, 228, 1216, 247, 4312, 12936, 334400, 2700, 90, 0, 0),
					new Monster(58, 3, 247, 950, 237, 1368, 342, 6432, 19296, 322848, 1450, 84, 0, 0),
					new Monster(62, 1, 1026, 308, 285, 1520, 285, 5871, 17613, 478800, 3100, 122, 0, 0),
					new Monster(66, 3, 285, 1102, 275, 1672, 399, 8547, 25641, 448096, 1650, 6, 0, 0),
					new Monster(70, 1, 1178, 365, 342, 1824, 323, 7670, 23010, 647520, 3500, 31, 0, 0),
					new Monster(74, 1, 1254, 394, 370, 1976, 342, 8694, 26082, 741000, 3700, 32, 0, 0),
					new Monster(78, 3, 342, 1330, 332, 2128, 484, 12328, 36984, 672448, 1950, 32, 0, 0),
					new Monster(82, 3, 361, 1406, 351, 2280, 513, 13677, 41031, 756960, 2050, 3, 0, 0),
					new Monster(86, 1, 1482, 479, 456, 2432, 399, 12069, 36207, 1057920, 4300, 1, 0, 0),
					new Monster(96, 1, 1672, 551, 527, 2812, 446, 15288, 45864, 1363820, 4800, 57, 0, 0),
					new Monster(106, 3, 475, 1862, 465, 4788, 684, 23749, 71247, 2049264, 2650, 92, 0, 0),
					new Monster(116, 3, 522, 2052, 513, 7144, 779, 28634, 85902, 3343392, 2900, 85, 0, 0),
					new Monster(130, 3, 589, 2318, 579, 20520, 855, 36424, 109272, 10752480, 3250, 201, 0, 0)];
			case 9:
			return [new Monster(56, 3, 237, 912, 228, 1292, 327, 5888, 17664, 294576, 1400, 88, 0, 0),
					new Monster(60, 3, 256, 988, 247, 1444, 356, 6831, 20493, 352336, 1500, 86, 0, 0),
					new Monster(64, 1, 1064, 323, 299, 1596, 294, 6313, 18939, 518700, 3200, 155, 0, 0),
					new Monster(68, 1, 1140, 351, 327, 1748, 313, 7245, 21735, 603060, 3400, 167, 0, 0),
					new Monster(72, 3, 313, 1216, 304, 1900, 441, 10248, 30744, 554800, 1800, 88, 0, 0),
					new Monster(76, 3, 332, 1292, 323, 2052, 470, 11570, 34710, 632016, 1900, 86, 0, 0),
					new Monster(80, 3, 351, 1368, 342, 2204, 498, 12878, 38634, 714096, 2000, 155, 0, 0),
					new Monster(84, 1, 1444, 465, 441, 2356, 389, 11455, 34365, 1001300, 4200, 167, 0, 0),
					new Monster(88, 3, 389, 1520, 380, 2660, 555, 15912, 47736, 946960, 2200, 88, 0, 0),
					new Monster(92, 1, 1596, 522, 498, 2660, 427, 13920, 41760, 1236900, 4600, 86, 0, 0),
					new Monster(96, 1, 1672, 551, 527, 2660, 446, 15288, 45864, 1290100, 4800, 155, 0, 0),
					new Monster(106, 3, 475, 1862, 465, 3192, 684, 23749, 71247, 1366176, 2650, 167, 0, 0),
					new Monster(116, 3, 522, 2052, 513, 5358, 779, 28634, 85902, 2507544, 2900, 88, 0, 0),
					new Monster(126, 1, 2242, 764, 741, 7904, 589, 27225, 81675, 5019040, 6300, 156, 0, 0),
					new Monster(140, 3, 636, 2508, 627, 22420, 926, 42419, 127257, 12644880, 3500, 202, 0, 0)];
			case 10:
			return [new Monster(66, 3, 285, 1102, 275, 1672, 399, 8547, 25641, 448096, 1650, 9, 0, 0),
					new Monster(70, 1, 1178, 365, 342, 1824, 323, 7670, 23010, 647520, 3500, 12, 0, 0),
					new Monster(74, 1, 1254, 394, 370, 1976, 342, 8694, 26082, 741000, 3700, 97, 0, 0),
					new Monster(78, 3, 342, 1330, 332, 2128, 484, 12328, 36984, 672448, 1950, 112, 0, 0),
					new Monster(82, 3, 361, 1406, 351, 2280, 513, 13677, 41031, 756960, 2050, 115, 0, 0),
					new Monster(86, 1, 1482, 479, 456, 2432, 399, 12069, 36207, 1057920, 4300, 9, 0, 0),
					new Monster(90, 1, 1558, 508, 484, 2584, 418, 13260, 39780, 1175720, 4500, 12, 0, 0),
					new Monster(94, 1, 1634, 536, 513, 2736, 437, 14596, 43788, 1299600, 4700, 97, 0, 0),
					new Monster(98, 3, 437, 1710, 427, 2888, 627, 20124, 60372, 1143648, 2450, 112, 0, 0),
					new Monster(102, 3, 480, 1880, 470, 3192, 655, 23058, 69174, 1315104, 2550, 115, 0, 0),
					new Monster(106, 3, 475, 1862, 465, 3344, 684, 23749, 71247, 1431232, 2650, 9, 0, 0),
					new Monster(116, 3, 522, 2052, 513, 3572, 779, 28634, 85902, 1671696, 2900, 12, 0, 0),
					new Monster(126, 1, 2242, 764, 741, 5928, 589, 27225, 81675, 3764280, 6300, 97, 0, 0),
					new Monster(136, 2, 598, 617, 2508, 8360, 893, 74296, 222888, 2290640, 1360, 112, 0, 0),
					new Monster(150, 3, 684, 2698, 674, 24320, 997, 49140, 147420, 14689280, 3750, 203, 0, 0)];
			case 11:
			return [new Monster(76, 3, 332, 1292, 323, 2052, 470, 11570, 34710, 632016, 1900, 9, 0, 0),
					new Monster(80, 3, 351, 1368, 342, 2204, 498, 12878, 38634, 714096, 2000, 12, 0, 0),
					new Monster(84, 1, 1444, 465, 441, 2356, 389, 11455, 34365, 1001300, 4200, 97, 0, 0),
					new Monster(88, 3, 389, 1520, 380, 2660, 555, 15912, 47736, 946960, 2200, 112, 0, 0),
					new Monster(92, 1, 1596, 522, 498, 2660, 427, 13920, 41760, 1236900, 4600, 115, 0, 0),
					new Monster(96, 1, 1672, 551, 527, 2812, 446, 15288, 45864, 1363820, 4800, 9, 0, 0),
					new Monster(100, 3, 446, 1748, 437, 2964, 641, 20825, 62475, 1197456, 2500, 12, 0, 0),
					new Monster(104, 2, 446, 465, 2000, 2964, 665, 45024, 135072, 622440, 1040, 97, 0, 0),
					new Monster(108, 1, 1900, 636, 612, 3268, 503, 19673, 59019, 1781060, 5400, 112, 0, 0),
					new Monster(112, 3, 503, 1976, 494, 3420, 726, 26532, 79596, 1545840, 2800, 115, 0, 0),
					new Monster(116, 3, 522, 2052, 513, 3572, 779, 28634, 85902, 1671696, 2900, 9, 0, 0),
					new Monster(126, 1, 2242, 764, 741, 3952, 589, 27225, 81675, 2509520, 6300, 12, 0, 0),
					new Monster(136, 2, 598, 617, 2508, 6270, 893, 74296, 222888, 1717980, 1360, 97, 0, 0),
					new Monster(146, 1, 2622, 907, 883, 9576, 684, 37083, 111249, 7038360, 7300, 112, 0, 0),
					new Monster(160, 3, 731, 2888, 722, 26220, 1068, 56066, 168198, 16885680, 4000, 204, 0, 0)];
			case 12:
			return [new Monster(86, 1, 1482, 479, 456, 2432, 399, 12069, 36207, 1057920, 4300, 15, 0, 0),
					new Monster(90, 1, 1558, 508, 484, 2584, 418, 13260, 39780, 1175720, 4500, 16, 0, 0),
					new Monster(94, 1, 1634, 536, 513, 2736, 437, 14596, 43788, 1299600, 4700, 4, 0, 0),
					new Monster(98, 3, 437, 1710, 427, 2888, 627, 20124, 60372, 1143648, 2450, 14, 0, 0),
					new Monster(102, 3, 480, 1880, 470, 3040, 655, 23058, 69174, 1252480, 2550, 135, 0, 0),
					new Monster(106, 3, 475, 1862, 465, 3192, 684, 23749, 71247, 1366176, 2650, 133, 0, 0),
					new Monster(110, 3, 494, 1938, 484, 3344, 712, 25608, 76824, 1484736, 2750, 51, 0, 0),
					new Monster(114, 2, 494, 513, 2090, 3344, 736, 51870, 155610, 769120, 1140, 22, 0, 0),
					new Monster(118, 3, 532, 2090, 522, 3648, 769, 29820, 89460, 1736448, 2950, 16, 0, 0),
					new Monster(122, 1, 2166, 736, 712, 3800, 570, 25389, 76167, 2337000, 6100, 4, 0, 0),
					new Monster(126, 1, 2242, 764, 741, 3952, 589, 27225, 81675, 2509520, 6300, 14, 0, 0),
					new Monster(136, 2, 598, 617, 2508, 4180, 893, 74296, 222888, 1145320, 1360, 135, 0, 0),
					new Monster(146, 1, 2622, 907, 883, 7068, 684, 37083, 111249, 5194980, 7300, 133, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 9880, 1035, 98549, 295647, 3102320, 1560, 51, 0, 0),
					new Monster(170, 1, 3078, 1078, 1054, 28120, 798, 50820, 152460, 24042600, 8500, 205, 0, 0)];
			case 13:
			return [new Monster(96, 1, 1672, 551, 527, 2812, 446, 15288, 45864, 1363820, 4800, 6, 0, 0),
					new Monster(100, 3, 446, 1748, 437, 2964, 641, 20825, 62475, 1197456, 2500, 11, 0, 0),
					new Monster(104, 2, 446, 465, 2000, 2964, 665, 45024, 135072, 622440, 1040, 5, 0, 0),
					new Monster(108, 1, 1900, 636, 612, 3268, 503, 19673, 59019, 1781060, 5400, 10, 0, 0),
					new Monster(112, 3, 503, 1976, 494, 3420, 726, 26532, 79596, 1545840, 2800, 5, 0, 0),
					new Monster(116, 3, 522, 2052, 513, 3572, 779, 28634, 85902, 1671696, 2900, 10, 0, 0),
					new Monster(120, 2, 522, 541, 2204, 3572, 779, 57460, 172380, 864424, 1200, 96, 0, 0),
					new Monster(124, 1, 2204, 750, 726, 3876, 579, 26299, 78897, 2422500, 6200, 6, 0, 0),
					new Monster(128, 3, 579, 2280, 570, 4028, 840, 35266, 105798, 2078448, 3200, 11, 0, 0),
					new Monster(132, 1, 2356, 807, 783, 4180, 617, 29972, 89916, 2779700, 6600, 5, 0, 0),
					new Monster(136, 2, 598, 617, 2508, 4180, 893, 74296, 222888, 1145320, 1360, 10, 0, 0),
					new Monster(146, 1, 2622, 907, 883, 4712, 684, 37083, 111249, 3463320, 7300, 5, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 7410, 1035, 98549, 295647, 2326740, 1560, 10, 0, 0),
					new Monster(166, 2, 741, 760, 3078, 10640, 1106, 112112, 336336, 3553760, 1660, 5, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 30210, 1211, 71613, 214839, 21872040, 4500, 206, 0, 0)];
			case 14:
			return [new Monster(106, 3, 475, 1862, 465, 3192, 684, 23749, 71247, 1366176, 2650, 115, 0, 0),
					new Monster(110, 3, 494, 1938, 484, 3344, 712, 25608, 76824, 1484736, 2750, 117, 0, 0),
					new Monster(114, 2, 494, 513, 2090, 3344, 736, 51870, 155610, 769120, 1140, 85, 0, 0),
					new Monster(118, 3, 532, 2090, 522, 3648, 769, 29820, 89460, 1736448, 2950, 115, 0, 0),
					new Monster(122, 1, 2166, 736, 712, 3800, 570, 25389, 76167, 2337000, 6100, 84, 0, 0),
					new Monster(126, 1, 2242, 764, 741, 3952, 589, 27225, 81675, 2509520, 6300, 84, 0, 0),
					new Monster(130, 3, 589, 2318, 579, 4104, 855, 36424, 109272, 2150496, 3250, 112, 0, 0),
					new Monster(134, 1, 2394, 821, 798, 4256, 627, 30960, 92880, 2872800, 6700, 6, 0, 0),
					new Monster(138, 1, 2470, 850, 826, 4408, 646, 32984, 98952, 3063560, 6900, 112, 0, 0),
					new Monster(142, 2, 627, 646, 2622, 4408, 935, 81530, 244590, 1260688, 1420, 6, 0, 0),
					new Monster(146, 1, 2622, 907, 883, 4712, 684, 37083, 111249, 3463320, 7300, 27, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 4940, 1035, 98549, 295647, 1551160, 1560, 113, 0, 0),
					new Monster(166, 2, 741, 760, 3078, 7980, 1106, 112112, 336336, 2665320, 1660, 122, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 11704, 1182, 68480, 205440, 8286432, 4400, 114, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 31160, 1273, 147972, 443916, 11903120, 1900, 207, 0, 0)];
			case 15:
			return [new Monster(116, 3, 522, 2052, 513, 3572, 779, 28634, 85902, 1671696, 2900, 73, 0, 0),
					new Monster(120, 2, 522, 541, 2204, 3572, 779, 57460, 172380, 864424, 1200, 71, 0, 0),
					new Monster(124, 1, 2204, 750, 726, 3876, 579, 26299, 78897, 2422500, 6200, 24, 0, 0),
					new Monster(128, 3, 579, 2280, 570, 4028, 840, 35266, 105798, 2078448, 3200, 63, 0, 0),
					new Monster(132, 1, 2356, 807, 783, 4180, 617, 29972, 89916, 2779700, 6600, 50, 0, 0),
					new Monster(136, 2, 598, 617, 2508, 4180, 893, 74296, 222888, 1145320, 1360, 63, 0, 0),
					new Monster(140, 3, 636, 2508, 627, 4484, 926, 42419, 127257, 2528976, 3500, 50, 0, 0),
					new Monster(144, 3, 655, 2584, 646, 4636, 954, 45066, 135198, 2688880, 3600, 63, 0, 0),
					new Monster(148, 1, 2800, 970, 945, 4788, 730, 40183, 120549, 3567060, 7400, 50, 0, 0),
					new Monster(152, 1, 2736, 950, 926, 4940, 712, 40278, 120834, 3779100, 7600, 63, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 4940, 1035, 98549, 295647, 1551160, 1560, 66, 0, 0),
					new Monster(166, 2, 741, 760, 3078, 5320, 1106, 112112, 336336, 1776880, 1660, 65, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 8778, 1182, 68480, 205440, 6214824, 4400, 25, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 12084, 1239, 140008, 420024, 4495248, 1850, 71, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 33060, 1339, 164120, 492360, 13290120, 2000, 208, 0, 0)];
			case 16:
			return [new Monster(126, 1, 2242, 764, 741, 3952, 589, 27225, 81675, 2509520, 6300, 153, 0, 0),
					new Monster(130, 3, 589, 2318, 579, 4104, 855, 36424, 109272, 2150496, 3250, 151, 0, 0),
					new Monster(134, 1, 2394, 821, 798, 4256, 627, 30960, 92880, 2872800, 6700, 150, 0, 0),
					new Monster(138, 1, 2470, 850, 826, 4408, 646, 32984, 98952, 3063560, 6900, 150, 0, 0),
					new Monster(142, 2, 627, 646, 2622, 4408, 935, 81530, 244590, 1260688, 1420, 109, 0, 0),
					new Monster(146, 1, 2622, 907, 883, 4712, 684, 37083, 111249, 3463320, 7300, 131, 0, 0),
					new Monster(150, 3, 684, 2698, 674, 4864, 997, 49140, 147420, 2937856, 3750, 153, 0, 0),
					new Monster(154, 1, 2774, 964, 940, 5016, 722, 41422, 124266, 3887400, 7700, 151, 0, 0),
					new Monster(158, 3, 722, 2850, 712, 5168, 1054, 54912, 164736, 3286848, 3950, 150, 0, 0),
					new Monster(162, 1, 2926, 1021, 997, 5320, 760, 46001, 138003, 4335800, 8100, 150, 0, 0),
					new Monster(166, 2, 741, 760, 3078, 5320, 1106, 112112, 336336, 1776880, 1660, 109, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 131, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 9063, 1239, 140008, 420024, 3371436, 1850, 153, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 12844, 1306, 155727, 467181, 5034848, 1950, 111, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 35720, 959, 78720, 236160, 37684600, 10500, 209, 0, 0)];
			case 17:
			return [new Monster(136, 2, 598, 617, 2508, 4180, 893, 74296, 222888, 1145320, 1360, 37, 0, 0),
					new Monster(140, 3, 636, 2508, 627, 4484, 926, 42419, 127257, 2528976, 3500, 74, 0, 0),
					new Monster(144, 3, 655, 2584, 646, 4636, 954, 45066, 135198, 2688880, 3600, 67, 0, 0),
					new Monster(148, 1, 2800, 970, 945, 4788, 730, 40183, 120549, 3567060, 7400, 68, 0, 0),
					new Monster(152, 1, 2736, 950, 926, 4940, 712, 40278, 120834, 3779100, 7600, 37, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 4940, 1035, 98549, 295647, 1551160, 1560, 74, 0, 0),
					new Monster(160, 3, 731, 2888, 722, 5244, 1068, 56066, 168198, 3377136, 4000, 67, 0, 0),
					new Monster(164, 3, 750, 2964, 741, 5396, 1097, 59103, 177309, 3561360, 4100, 68, 0, 0),
					new Monster(168, 2, 750, 769, 3116, 5396, 1121, 114816, 344448, 1823848, 1680, 37, 0, 0),
					new Monster(172, 1, 3116, 1092, 1068, 5700, 807, 52104, 156312, 4930500, 8600, 74, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 13, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 23, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 9633, 1306, 155727, 467181, 3776136, 1950, 21, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 13908, 1377, 94125, 282375, 11460192, 5125, 4, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 37620, 997, 86645, 259935, 41570100, 11000, 210, 0, 0)];
			case 18:
			return [new Monster(144, 3, 655, 2584, 646, 4636, 954, 45066, 135198, 2688880, 3600, 155, 0, 0),
					new Monster(148, 1, 2800, 970, 945, 4788, 730, 40183, 120549, 3567060, 7400, 155, 0, 0),
					new Monster(152, 1, 2736, 950, 926, 4940, 712, 40278, 120834, 3779100, 7600, 155, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 4940, 1035, 98549, 295647, 1551160, 1560, 155, 0, 0),
					new Monster(160, 3, 731, 2888, 722, 5244, 1068, 56066, 168198, 3377136, 4000, 155, 0, 0),
					new Monster(164, 3, 750, 2964, 741, 5396, 1097, 59103, 177309, 3561360, 4100, 155, 0, 0),
					new Monster(168, 2, 750, 769, 3116, 5396, 1121, 114816, 344448, 1823848, 1680, 157, 0, 0),
					new Monster(172, 1, 3116, 1092, 1068, 5700, 807, 52104, 156312, 4930500, 8600, 155, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 155, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 6004, 1211, 71613, 214839, 4346896, 4500, 155, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 155, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 155, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 10431, 1377, 94125, 282375, 8595144, 5125, 155, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 14668, 978, 82740, 248220, 15841440, 10750, 155, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 39520, 1543, 119004, 357012, 36516480, 5750, 213, 0, 0)];
			case 19:
			return [new Monster(152, 1, 2736, 950, 926, 4940, 712, 40278, 120834, 3779100, 7600, 114, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 4940, 1035, 98549, 295647, 1551160, 1560, 67, 0, 0),
					new Monster(160, 3, 731, 2888, 722, 5244, 1068, 56066, 168198, 3377136, 4000, 116, 0, 0),
					new Monster(164, 3, 750, 2964, 741, 5396, 1097, 59103, 177309, 3561360, 4100, 114, 0, 0),
					new Monster(168, 2, 750, 769, 3116, 5396, 1121, 114816, 344448, 1823848, 1680, 67, 0, 0),
					new Monster(172, 1, 3116, 1092, 1068, 5700, 807, 52104, 156312, 4930500, 8600, 116, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 114, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 6004, 1211, 71613, 214839, 4346896, 4500, 67, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 116, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 6232, 1273, 147972, 443916, 2380624, 1900, 114, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 67, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 116, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 11001, 978, 82740, 248220, 11881080, 10750, 68, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 15428, 1510, 113988, 341964, 13946912, 5625, 102, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 41420, 1073, 103635, 310905, 49911100, 12000, 211, 0, 0)];
			case 20:
			return [new Monster(160, 3, 731, 2888, 722, 5244, 1068, 56066, 168198, 3377136, 4000, 168, 0, 0),
					new Monster(164, 3, 750, 2964, 741, 5396, 1097, 59103, 177309, 3561360, 4100, 168, 0, 0),
					new Monster(168, 2, 750, 769, 3116, 5396, 1121, 114816, 344448, 1823848, 1680, 166, 0, 0),
					new Monster(172, 1, 3116, 1092, 1068, 5700, 807, 52104, 156312, 4930500, 8600, 168, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 168, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 6004, 1211, 71613, 214839, 4346896, 4500, 166, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 168, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 6232, 1273, 147972, 443916, 2380624, 1900, 168, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 166, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 6612, 1339, 164120, 492360, 2658024, 2000, 168, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 168, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 166, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 11571, 1510, 113988, 341964, 10460184, 5625, 168, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 17556, 1572, 227841, 683523, 8286432, 2350, 168, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 43320, 1111, 112700, 338100, 54366600, 12500, 212, 0, 0)];
			case 21:
			return [new Monster(168, 2, 750, 769, 3116, 5396, 1121, 114816, 344448, 1823848, 1680, 44, 0, 0),
					new Monster(172, 1, 3116, 1092, 1068, 5700, 807, 52104, 156312, 4930500, 8600, 41, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 120, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 6004, 1211, 71613, 214839, 4346896, 4500, 40, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 110, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 6232, 1273, 147972, 443916, 2380624, 1900, 110, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 110, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 6612, 1339, 164120, 492360, 2658024, 2000, 110, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 42, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 7144, 959, 78720, 236160, 7536920, 10500, 40, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 39, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 44, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 11913, 1572, 227841, 683523, 5622936, 2350, 41, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 16948, 1092, 108240, 324720, 20846040, 12250, 42, 0, 0),
					new Monster(260, 3, 1206, 4788, 1197, 45220, 1743, 152801, 458403, 47209680, 6500, 214, 0, 0)];
			case 22:
			return [new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 91, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 6004, 1211, 71613, 214839, 4346896, 4500, 91, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 91, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 6232, 1273, 147972, 443916, 2380624, 1900, 91, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 91, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 6612, 1339, 164120, 492360, 2658024, 2000, 91, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 90, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 7144, 959, 78720, 236160, 7536920, 10500, 96, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 92, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 7524, 997, 86645, 259935, 8314020, 11000, 97, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 147, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 90, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 12711, 1092, 108240, 324720, 15634530, 12250, 90, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 17708, 1130, 117500, 352500, 22666240, 12750, 96, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 47120, 1187, 131970, 395910, 63847600, 13500, 215, 0, 0)];
			case 23:
			return [new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 79, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 6232, 1273, 147972, 443916, 2380624, 1900, 79, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 79, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 6612, 1339, 164120, 492360, 2658024, 2000, 79, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 79, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 7144, 959, 78720, 236160, 7536920, 10500, 79, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 79, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 7524, 997, 86645, 259935, 8314020, 11000, 79, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 79, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 7904, 1543, 119004, 357012, 7303296, 5750, 79, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 79, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 79, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 13281, 1130, 117500, 352500, 16999680, 12750, 79, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 18468, 1168, 127140, 381420, 24562440, 13250, 79, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 49020, 1876, 177848, 533544, 55098480, 7000, 216, 0, 0)];
			case 24:
			return [new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 88, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 6612, 1339, 164120, 492360, 2658024, 2000, 132, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 88, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 7144, 959, 78720, 236160, 7536920, 10500, 88, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 88, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 7524, 997, 86645, 259935, 8314020, 11000, 132, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 88, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 7904, 1543, 119004, 357012, 7303296, 5750, 88, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 88, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 8284, 1073, 103635, 310905, 9982220, 12000, 132, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 132, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 103, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 13851, 1168, 127140, 381420, 18421830, 13250, 133, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 18924, 1838, 313635, 940905, 10446048, 2750, 130, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 50920, 1942, 191352, 574056, 59270880, 7250, 217, 0, 0)];
			case 25:
			return [new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 56, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 7144, 959, 78720, 236160, 7536920, 10500, 3, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 2, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 7524, 997, 86645, 259935, 8314020, 11000, 1, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 122, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 7904, 1543, 119004, 357012, 7303296, 5750, 56, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 3, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 8284, 1073, 103635, 310905, 9982220, 12000, 2, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 1, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 8664, 1111, 112700, 338100, 10873320, 12500, 122, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 56, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 3, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 14193, 1838, 313635, 940905, 7834536, 2750, 2, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 19988, 1244, 147560, 442680, 28582840, 14250, 1, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 52820, 1301, 163725, 491175, 79494100, 15000, 218, 0, 0)];
			case 26:
			return [new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 4, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 7524, 997, 86645, 259935, 8314020, 11000, 21, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 23, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 7904, 1543, 119004, 357012, 7303296, 5750, 23, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 37, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 8284, 1073, 103635, 310905, 9982220, 12000, 48, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 37, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 8664, 1111, 112700, 338100, 10873320, 12500, 4, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 21, 0, 0),
					new Monster(260, 3, 1206, 4788, 1197, 9044, 1743, 152801, 458403, 9441936, 6500, 23, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 21, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 37, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 14991, 1244, 147560, 442680, 21437130, 14250, 48, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 20444, 1971, 361662, 1084986, 12102848, 2950, 37, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 53960, 2071, 400416, 1201248, 33563120, 3100, 219, 0, 0)];
			case 27:
			return [new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 93, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 7904, 1543, 119004, 357012, 7303296, 5750, 115, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 93, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 8284, 1073, 103635, 310905, 9982220, 12000, 115, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 93, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 8664, 1111, 112700, 338100, 10873320, 12500, 115, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 93, 0, 0),
					new Monster(260, 3, 1206, 4788, 1197, 9044, 1743, 152801, 458403, 9441936, 6500, 115, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 93, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 9424, 1187, 131970, 395910, 12769520, 13500, 115, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 93, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 141, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 15333, 1971, 361662, 1084986, 9077136, 2950, 140, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 21204, 2037, 387244, 1161732, 12976848, 3050, 94, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 56620, 2142, 233642, 700926, 72700080, 8000, 220, 0, 0)];
			case 28:
			return [new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 25, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 8284, 1073, 103635, 310905, 9982220, 12000, 25, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 33, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 8664, 1111, 112700, 338100, 10873320, 12500, 28, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 24, 0, 0),
					new Monster(260, 3, 1206, 4788, 1197, 9044, 1743, 152801, 458403, 9441936, 6500, 26, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 32, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 9424, 1187, 131970, 395910, 12769520, 13500, 25, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 25, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 9804, 1876, 177848, 533544, 11019696, 7000, 33, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 28, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 24, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 15903, 2037, 387244, 1161732, 9732636, 3050, 26, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 22268, 1358, 181040, 543120, 35183440, 15750, 32, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 58520, 1415, 198900, 596700, 96850600, 16500, 221, 0, 0)];
			case 29:
			return [new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 48, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 8664, 1111, 112700, 338100, 10873320, 12500, 54, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 51, 0, 0),
					new Monster(260, 3, 1206, 4788, 1197, 9044, 1743, 152801, 458403, 9441936, 6500, 50, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 92, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 9424, 1187, 131970, 395910, 12769520, 13500, 48, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 54, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 9804, 1876, 177848, 533544, 11019696, 7000, 51, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 50, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 10184, 1942, 191352, 574056, 11854176, 7250, 92, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 48, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 54, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 16701, 1358, 181040, 543120, 26387580, 15750, 51, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 22724, 2170, 440420, 1321260, 14816048, 3250, 50, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 60420, 1453, 211385, 634155, 103016100, 17000, 222, 0, 0)];
			case 30:
			return [new Monster(260, 3, 1206, 4788, 1197, 9044, 1743, 152801, 458403, 9441936, 6500, 129, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 137, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 9424, 1187, 131970, 395910, 12769520, 13500, 13, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 67, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 9804, 1876, 177848, 533544, 11019696, 7000, 129, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 137, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 10184, 1942, 191352, 574056, 11854176, 7250, 13, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 67, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 10564, 1301, 163725, 491175, 15898820, 15000, 129, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 156, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 7, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 17043, 2170, 440420, 1321260, 11112036, 3250, 129, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 23788, 2242, 256886, 770658, 31971072, 8375, 137, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 223, 0, 0)];
			case 31:
			return [new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 132, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 9424, 1187, 131970, 395910, 12769520, 13500, 144, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 68, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 9804, 1876, 177848, 533544, 11019696, 7000, 144, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 59, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 10184, 1942, 191352, 574056, 11854176, 7250, 61, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 68, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 10564, 1301, 163725, 491175, 15898820, 15000, 144, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 68, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 10792, 2071, 400416, 1201248, 6712624, 3100, 144, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 59, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 61, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 17841, 2242, 256886, 770658, 23978304, 8375, 59, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 24548, 1472, 217940, 653820, 42468040, 17250, 61, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 224, 0, 0)];
			case 32:
			return [new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 110, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 9804, 1876, 177848, 533544, 11019696, 7000, 79, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 108, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 10184, 1942, 191352, 574056, 11854176, 7250, 110, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 79, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 10564, 1301, 163725, 491175, 15898820, 15000, 108, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 110, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 10792, 2071, 400416, 1201248, 6712624, 3100, 79, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 108, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 11324, 2142, 233642, 700926, 14540016, 8000, 110, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 79, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 108, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 18411, 1472, 217940, 653820, 31851030, 17250, 62, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 29, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 225, 0, 0)];
			case 33:
			return [new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 60, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 10184, 1942, 191352, 574056, 11854176, 7250, 110, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 106, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 10564, 1301, 163725, 491175, 15898820, 15000, 105, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 60, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 10792, 2071, 400416, 1201248, 6712624, 3100, 62, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 121, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 11324, 2142, 233642, 700926, 14540016, 8000, 62, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 105, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 11704, 1415, 198900, 596700, 19370120, 16500, 60, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 62, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 105, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 9, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 107, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 226, 0, 0)];
			case 34:
			return [new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 157, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 10564, 1301, 163725, 491175, 15898820, 15000, 161, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 157, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 10792, 2071, 400416, 1201248, 6712624, 3100, 161, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 157, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 11324, 2142, 233642, 700926, 14540016, 8000, 161, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 157, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 11704, 1415, 198900, 596700, 19370120, 16500, 161, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 157, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 12084, 1453, 211385, 634155, 20603220, 17000, 161, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 157, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 161, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 81, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 70, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 227, 0, 0)];
			case 35:
			return [new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 150, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 10792, 2071, 400416, 1201248, 6712624, 3100, 69, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 40, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 11324, 2142, 233642, 700926, 14540016, 8000, 152, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 43, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 11704, 1415, 198900, 596700, 19370120, 16500, 142, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 41, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 12084, 1453, 211385, 634155, 20603220, 17000, 153, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 43, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 142, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 41, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 141, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 41, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 141, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 228, 0, 0)];
			case 36:
			return [new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 12, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 11324, 2142, 233642, 700926, 14540016, 8000, 3, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 12, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 11704, 1415, 198900, 596700, 19370120, 16500, 3, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 104, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 12084, 1453, 211385, 634155, 20603220, 17000, 12, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 3, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 104, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 3, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 3, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 104, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 229, 0, 0)];
			case 37:
			return [new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 149, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 11704, 1415, 198900, 596700, 19370120, 16500, 149, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 149, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 12084, 1453, 211385, 634155, 20603220, 17000, 149, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 230, 0, 0)];
			case 38:
			return [new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 29, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 12084, 1453, 211385, 634155, 20603220, 17000, 14, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 2, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 1, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 29, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 14, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 2, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 1, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 29, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 14, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 2, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 1, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 29, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 14, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 231, 0, 0)];
			case 39:
			return [new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 18, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 106, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 18, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 34, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 106, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 18, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 106, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 18, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 105, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 9, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 18, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 232, 0, 0)];
			case 40:
			return [new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 233, 0, 0)];
			case 41:
			return [new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 31, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 51, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 31, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 31, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 51, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 31, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 31, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 51, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 234, 0, 0)];
			case 42:
			return [new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 25, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 4, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 69, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 5, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 67, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 4, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 24, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 68, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 72, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 72, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 6, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 71, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 25, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 72, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 235, 0, 0)];
			case 43:
			return [new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 236, 0, 0)];
			case 44:
			return [new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 24670, 2072, 692289, 1395927, 44529352, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 24670, 2072, 692289, 1395927, 44529352, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 32893, 2072, 692289, 1395927, 59371864, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 82232, 2072, 692289, 1395927, 146750800, 0, 237, 0, 0)];
			case 45:
			return [new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 12, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 3, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 2, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 1, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 10, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 2, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 1, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 10, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 2, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 1, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 10, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 53819116, 0, 2, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 53819116, 0, 12, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 71758816, 0, 3, 0, 0),
					new Monster(370, 2, 0, 0, 0, 0, 0, 1790789, 2283281, 178586064, 0, 238, 0, 0)];
			case 46:
			return [new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 31, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 115, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 113, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 31, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 115, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 113, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 113, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 101, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 129, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 115, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 113, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 32552, 2734, 960882, 1243346, 62011560, 0, 31, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 32552, 2734, 960882, 1243346, 62011560, 0, 33, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 43402, 2734, 960882, 1243346, 82680808, 0, 129, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 108505, 2734, 960882, 1243346, 206702032, 0, 239, 0, 0)];
			case 47:
			return [new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 56, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 65, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 155, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 66, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 53, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 66, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 53, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 65, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 63, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 155, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 66, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 69580408, 0, 53, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 69580408, 0, 65, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 92772568, 0, 64, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 231933376, 0, 240, 0, 0)];
			case 48:
			return [new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 99, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 99, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 99, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 156, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 154, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 100, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 115, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 113, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 154, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 157, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 154, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 75800336, 0, 116, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 75800336, 0, 98, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 101067120, 0, 114, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 252669776, 0, 241, 0, 0)];
			case 49:
			return [new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 40718, 3419, 1046630, 1273610, 81639592, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 40718, 3419, 1046630, 1273610, 81639592, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 54291, 3419, 1046630, 1273610, 108853456, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 135727, 3419, 1046630, 1273610, 272132640, 0, 242, 0, 0)];
			}
	}
}

//tower helpers
class Copycat extends Entity{

	//set from account class
	public $equip;
	public $data;

	//items are set in account class c
	public function Copycat($data, $items){
		$this->data = $data;
		$this->equip = $items;

		// var_dump($items);

		$this->class = $data['class'];
		$this->ID = -390 - $this->class;
		$this->lvl = $data['lvl'];

		$this->baseStats = [
			"str" => $data['str'],
			"dex" => $data['dex'],
			"int" => $data['intel'],
			"wit" => $data['wit'],
			"luck" => $data['luck']];

			
		if($this->class == 1){
			//TODO: get shield block
			$this->block = 0;
			$mainStat = "str";
		}else if($this->class == 3){
			$this->block = 50;
			$mainStat = "dex";
		}else{
			$this->block = 0;
			$mainStat = "int";
		}



		if($weapon = $this->getWeapon()){
			$dmgStat = $this->getTotalStats()[$mainStat];
			$this->dmg_min = floor($weapon->raw['dmg_min'] * (1 + $dmgStat/10));
			$this->dmg_max = floor($weapon->raw['dmg_max'] * (1 + $dmgStat/10));
		}else{
			//default dmg without weapon 1-2
			$dmgStat = $this->getTotalStats()[$mainStat];
			$this->dmg_min = floor(1 + $dmgStat/10);
			$this->dmg_max = floor(2 * (1 + $dmgStat/10));
		}

		parent::Entity();
	}

	public function getSave(){
		$ret = [];
		for($i = 0; $i <= 147;$i++)
			$ret[] = 0;

		$ret[0] = $this->data['lvl'];
		$ret[1] = $this->data['class'];
		$ret[2] = 0;
		$ret[3] = 0;


		//base stats
		$ret[4] = $this->baseStats['str'];
		$ret[5] = $this->baseStats['dex'];
		$ret[6] = $this->baseStats['int'];
		$ret[7] = $this->baseStats['wit'];
		$ret[8] = $this->baseStats['luck'];

		//equip stats
		$eqStats = $this->getEquipStats();
		$ret[9] = $eqStats['str'];
		$ret[10] = $eqStats['dex'];
		$ret[11] = $eqStats['int'];
		$ret[12] = $eqStats['wit'];
		$ret[13] = $eqStats['luck'];

		//potion stats? prolly not, dunno what this is
		// $ret[14] = 0;
		// $ret[15] = 0;
		// $ret[16] = 0;
		// $ret[17] = 0;
		// $ret[18] = 0;

		//armor
		$ret[19] = 1;

		//weapon dmgs
		if(($weapon = $this->getWeapon()) !== false){
			$ret[20] = $weapon->raw['dmg_min'];
			$ret[21] = $weapon->raw['dmg_max'];
		}else{
			$ret[20] = 1;
			$ret[21] = 2;
		}


		//items start 22
		foreach($this->equip as $item){
			$slot = $item->slot * 12;
			// $slot = 1*12;
			$itemSave = $item->getSave();
			for($i = 0; $i < 12; $i++)
				$ret[22 + $slot + $i] = $itemSave[$i];
		}

		//cena lvla
		$ret[142] = Copycat::getLvlCost($this->data['lvl']);

		//chuj wi
		// $ret[143] = 0;
		// $ret[144] = 0;
		// $ret[145] = 0;
		// $ret[146] = 0;
		// $ret[147] = 0;

		return join("/", $ret);
	}

	public function getFightHeader(){
		$ret = [];
		for($i = 0; $i < 47; $i++)
			$ret[] = 0;
		$ret[47] = "";

		$ret[0] = $this->ID;
		$ret[1] = $this->ID;

		$ret[2] = $this->lvl;
		$ret[3] = $this->maxHp;
		$ret[4] = $this->hp;

		$stats = $this->getTotalStats();
		$ret[5] = $stats['str'];
		$ret[6] = $stats['dex'];
		$ret[7] = $stats['int'];
		$ret[8] = $stats['wit'];
		$ret[9] = $stats['luck'];

		$ret[10] = $this->ID;
		// $ret[11] = 0;
		// $ret[12] = 0;
		// $ret[13] = 0;
		// $ret[14] = 0;
		// $ret[15] = 0;
		// $ret[16] = 0;
		// $ret[17] = 0;
		// $ret[18] = 0;
		// $ret[19] = 0;
		// $ret[20] = 0;
		// $ret[21] = 0;
		//tu bylo 1 chuj wie czemu, to jest raczej tylko dla potworow
		//class z tego co wynika
		$ret[22] = $this->class;
		//bron
		if($weapon = $this->getWeapon()){
			$ret[23] = 1;
			$ret[24] = $weapon->raw['item_id'];
			$ret[25] = $weapon->raw['dmg_min'];
			$ret[26] = $weapon->raw['dmg_max'];
			$ret[27] = $weapon->raw['a1'];
			$ret[28] = $weapon->raw['a2'];
			$ret[29] = $weapon->raw['a3'];
			$ret[30] = $weapon->raw['a4'];
			$ret[31] = $weapon->raw['a5'];
			$ret[32] = $weapon->raw['a6'];
			$ret[33] = $weapon->raw['value_silver'];
			$ret[34] = $weapon->raw['value_mush'];
		}

		// $ret[27] = 0;
		// $ret[28] = 0;
		// $ret[29] = 0;
		// $ret[30] = 0;
		// $ret[31] = 0;
		// $ret[32] = 0;
		// $ret[33] = 0;
		// $ret[34] = 0;
		// $ret[35] = 0;
		// $ret[36] = 0;
		// $ret[37] = 0;
		// $ret[38] = 0;
		// $ret[39] = 0;
		// $ret[40] = 0;
		// $ret[41] = 0;
		// $ret[42] = 0;
		// $ret[43] = 0;
		// $ret[44] = 0;
		// $ret[45] = 0;
		// $ret[46] = 0;
		

		return join("/", $ret);
	}

	public function lvlUp(){
		//warrior lvls starting from 150
		//1046, 358, 531, 1065, 547
		//1053, 360, 535, 1072, 551
		//1060, 363, 539, 1080, 555

		// var_dump($this->data);

		$this->data['lvl']++;

		$this->baseStats['str'] += 5;
		$this->baseStats['dex'] += 5;
		$this->baseStats['int'] += 5;
		$this->baseStats['wit'] += 5;
		$this->baseStats['luck'] += 5;

		switch($this->class){
			case 1:
				$this->baseStats['str'] += 5;
				$this->baseStats['wit'] += 5;
				break;
			case 2:
				$this->baseStats['int'] += 7;
				break;
			case 3:
				$this->baseStats['dex'] += 7;
				break;
		}

		$GLOBALS['db']->exec('UPDATE copycats SET lvl = '.$this->data['lvl'].', str = '.$this->baseStats['str'].', dex = '.$this->baseStats['dex'].', intel = '.$this->baseStats['int'].', wit = '.$this->baseStats['wit'].', luck = '.$this->baseStats['luck'].' WHERE ID = '.$this->data['ID']);

	}

	public function getWeapon(){
		foreach($this->equip as $item)
			if($item->type == 1)
				return $item;
		return false;
	}

	//copycat can't use shield
	public function getShield(){
		return false;
	}

	public function getEquipStats(){
		$stats = [
		"str" => "0",
		"dex" => "0",
		"int" => "0",
		"wit" => "0",
		"luck" => "0"];
		foreach($this->equip as $item){
			$itemStats = $item->stats;

			$stats['str'] += $itemStats['str'];
			$stats['dex'] += $itemStats['dex'];
			$stats['int'] += $itemStats['int'];
			$stats['wit'] += $itemStats['wit'];
			$stats['luck'] += $itemStats['luck'];
		}

		return $stats;
	}

	public function getTotalStats(){
		$stats = $this->baseStats;
		$equipStats = $this->getEquipStats();

		$stats['str'] += $equipStats['str'];
		$stats['dex'] += $equipStats['dex'];
		$stats['int'] += $equipStats['int'];
		$stats['wit'] += $equipStats['wit'];
		$stats['luck'] += $equipStats['luck'];

		return $stats;
	}

	public static function getLvlCost($lvl){
		return $lvl * 10000;
	}
}
?>